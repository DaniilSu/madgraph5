      SUBROUTINE SB_SF_%(iborn)3.3d(P1,ANS)
C  
%(info_lines)s
C
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C AND HELICITIES
C FOR THE POINT IN PHASE SPACE P(0:3,NEXTERNAL-1)
C  
%(process_lines_real)s
C  
C BORN AMPLITUDE IS 
%(process_lines)s
C
      IMPLICIT NONE
C  
C CONSTANTS
C  
      Include "nexternal.inc"
      INTEGER                 NCOMB,     NCROSS         
      PARAMETER (             NCOMB=  %(ncomb)d, NCROSS=  1)
      INTEGER    THEL
      PARAMETER (THEL=NCOMB*NCROSS)
      INTEGER NGRAPHS
      PARAMETER (NGRAPHS=   %(ngraphs)d)
C  
C ARGUMENTS 
C  
      REAL*8 P1(0:3,NEXTERNAL-1),ANS(NCROSS)
C  
C LOCAL VARIABLES 
C  
      REAL*8 P(0:3,NEXTERNAL-1)
      INTEGER NHEL(NEXTERNAL-1,NCOMB),NTRY
      REAL*8 T
      REAL*8 B_SF_%(iborn)3.3d
      REAL*8 ZERO
      PARAMETER(ZERO=0d0)
      INTEGER IHEL,IDEN(NCROSS),IC(NEXTERNAL-1,NCROSS)
      INTEGER IPROC,JC(NEXTERNAL-1), I,L,K
      LOGICAL GOODHEL(NCOMB,NCROSS)
      DATA NTRY/0/
      INTEGER NGOOD,igood(ncomb),jhel
      data ngood /0/
      save igood,jhel
      REAL*8 hwgt
      integer j,jj
      include "born_nhel.inc"
      double complex saveamp(ngraphs,max_bhel)
      common/to_saveamp/saveamp
      double precision savemom(nexternal-1,2)
      common/to_savemom/savemom

      character*79         hel_buff(2)
      common/to_helicity/  hel_buff

      DATA GOODHEL/THEL*.FALSE./
  %(helicity_lines)s
  %(den_factor_line)s
      double precision hel_fac
      logical calculatedBorn
      integer get_hel,skip
      common/cBorn/hel_fac,calculatedBorn,get_hel,skip
C ----------
C BEGIN CODE
C ----------
    NTRY=NTRY+1
    DO IHEL=1,NEXTERNAL
       JC(IHEL) = +1
    ENDDO
     
    IF (multi_channel) THEN
        DO IHEL=1,NGRAPHS
            amp2(ihel)=0d0
        ENDDO
        DO IHEL=1,int(jamp2(0))
            jamp2(ihel)=0d0
        ENDDO
    ENDIF
    ANS = 0D0
    write(hel_buff,'(16i5)') (0,i=1,nexternal)
    IF (ISUM_HEL .EQ. 0 .OR. NTRY .LT. 10) THEN
        DO IHEL=1,NCOMB
           IF (GOODHEL(IHEL) .OR. NTRY .LT. 2) THEN
               T=MATRIX(P ,NHEL(1,IHEL),JC(1))            
             DO JJ=1,nincoming
               IF(POL(JJ).NE.1d0.AND.NHEL(JJ,IHEL).EQ.INT(SIGN(1d0,POL(JJ)))) THEN
                 T=T*ABS(POL(JJ))
               ELSE IF(POL(JJ).NE.1d0)THEN
                 T=T*(2d0-ABS(POL(JJ)))
               ENDIF
             ENDDO
             ANS=ANS+T
             IF (T .NE. 0D0 .AND. .NOT.    GOODHEL(IHEL)) THEN
                 GOODHEL(IHEL)=.TRUE.
                 NGOOD = NGOOD +1
                 IGOOD(NGOOD) = IHEL
             ENDIF
           ENDIF
        ENDDO
        JHEL = 1
        ISUM_HEL=MIN(ISUM_HEL,NGOOD)
    ELSE              !RANDOM HELICITY
        DO J=1,ISUM_HEL
            JHEL=JHEL+1
            IF (JHEL .GT. NGOOD) JHEL=1
            HWGT = REAL(NGOOD)/REAL(ISUM_HEL)
            IHEL = IGOOD(JHEL)
            T=MATRIX(P ,NHEL(1,IHEL),JC(1))            
            DO JJ=1,nincoming
              IF(POL(JJ).NE.1d0.AND.NHEL(JJ,IHEL).EQ.INT(SIGN(1d0,POL(JJ)))) THEN
                T=T*ABS(POL(JJ))
              ELSE IF(POL(JJ).NE.1d0)THEN
                T=T*(2d0-ABS(POL(JJ)))
              ENDIF
            ENDDO
            ANS=ANS+T*HWGT
        ENDDO
        IF (ISUM_HEL .EQ. 1) THEN
            WRITE(HEL_BUFF,'(16i5)')(NHEL(i,IHEL),i=1,nexternal)
        ENDIF
    ENDIF
    IF (MULTI_CHANNEL) THEN
        XTOT=0D0
        DO IHEL=1,MAPCONFIG(0)
            XTOT=XTOT+AMP2(MAPCONFIG(IHEL))
        ENDDO
        IF (XTOT.NE.0D0) THEN
            ANS=ANS*AMP2(MAPCONFIG(ICONFIG))/XTOT
        ELSE
            ANS=0D0
        ENDIF
    ENDIF
    ANS=ANS/DBLE(IDEN)
    calculatedborn = .true.
    END
       
       
      REAL*8 FUNCTION B_SF_%(iborn)3.3d(P,NHEL,HELL,IC)
C  
%(info_lines)s
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL-1)

%(process_lines)s
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS,    NEIGEN 
      PARAMETER (NGRAPHS=   %(ngraphs)d,NEIGEN=  1) 
      include "nexternal.inc"
      INTEGER    NWAVEFUNCS, NCOLOR1, NCOLOR2
      PARAMETER (NWAVEFUNCS=%(nwavefuncs)d, NCOLOR1=%(ncolor1)d, NCOLOR2=%(ncolor1)d) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      REAL*8 P(0:3,NEXTERNAL-1)
      INTEGER NHEL(NEXTERNAL-1), IC(NEXTERNAL-1), HELL
C  
C LOCAL VARIABLES 
C  
      INTEGER I,J
      COMPLEX*16 ZTEMP
      REAL*8 DENOM(NCOLOR2), CF(NCOLOR1,NCOLOR2)
      COMPLEX*16 AMP(NGRAPHS), JAMP1(NCOLOR1), JAMP2(NCOLOR2)
      COMPLEX*16 W(18,NWAVEFUNCS)
      complex*16 imag1
      parameter (imag1 = (0d0,1d0))
C  
C GLOBAL VARIABLES
C  
      include "born_nhel.inc"
      double complex saveamp(ngraphs,max_bhel)
      common/to_saveamp/saveamp
      double precision hel_fac
      logical calculatedBorn
      integer get_hel,skip
      common/cBorn/hel_fac,calculatedBorn,get_hel,skip
      include "coupl.inc"
C  
C COLOR DATA
C  
%(color_data_lines)s
C ----------
C BEGIN CODE
C ----------
      if (.not. calculatedBorn) then
  %(helas_calls)s
      do i=1,ngraphs
         saveamp(i,hell)=amp(i)
      enddo
      elseif (calculatedBorn) then
      do i=1,ngraphs
         amp(i)=saveamp(i,hell)
      enddo
      endif
  %(jamp1_lines)s
  %(jamp2_lines)s
      B_SF_%(iborn)3.3d = 0.D0 
      DO I = 1, NCOLOR2
          ZTEMP = (0.D0,0.D0)
          DO J = 1, NCOLOR1
              ZTEMP = ZTEMP + CF(J,I)*JAMP1(J)
          ENDDO
          B_SF_%(iborn)3.3d =B_SF_%(iborn)3.3d+ZTEMP*DCONJG(JAMP2(I))/DENOM(I)   
      ENDDO
      END
       
       
