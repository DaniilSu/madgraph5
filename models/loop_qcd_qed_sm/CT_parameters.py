# This file was automatically created by FeynRules $Revision: 535 $
# Mathematica version: 7.0 for Mac OS X x86 (64-bit) (November 11, 2008)
# Date: Fri 18 Mar 2011 18:40:51

from object_library import all_CTparameters, CTParameter

from function_library import complexconjugate, re, im, csc, sec, acsc, asec, arg, reglog

################
# R2 vertices  #
################

# ========= #
# Pure QCD  #
# ========= #

RGR2 = CTParameter(name = 'RGR2',
              type = 'real',
              value = {0:'-(3.0/2.0)*G**4/(96.0*cmath.pi**2)'},
              texname = 'RGR2')

# ============== #
# Mixed QCD-QED  #
# ============== #

R2MixedFactor = CTParameter(name = 'R2MixedFactor',
              type = 'real',
              value = {0:'-(G**2*(1.0+lhv)*(Ncol**2-1.0))/(2.0*Ncol*16.0*cmath.pi**2)'},
              texname = 'R2MixedFactor')

# ============== #
# Pure QED       #
# ============== #

R2SS = CTParameter(name = 'R2SS',
	type = 'real',
	value = {0:'ee**2/(16.0*cmath.pi**2*sw**2)'},
	texname = 'R2SS')

R2VV = CTParameter(name = 'R2VV',
                   type = 'real',
                   value = {0:'ee**2/cmath.pi**2'},
                   texname = 'R2VV')

R2SFF = CTParameter(name = 'R2SFF',
                    type = 'real',
                    value = {0:'ee**3/cmath.pi**2'},
                    texname = 'R2SFF')

R24S = CTParameter(name = 'R24S',
                     type = 'real',
                     value = {0:'ee**4/cmath.pi**2'},
                     texname = 'R24S')

# ============== #
# Mixed QED-QCD  #
# ============== #

R2GQQ2 = CTParameter(name = 'R2GQQ2',
                     type = 'real',
                     value = {0:'-G*ee**2/cmath.pi**2'},
                     texname = 'R2GQQ2')

################
# UV vertices  #
################

# ========= #
# Pure QCD  #
# ========= #

G_UVg = CTParameter(name = 'G_UVg',
                    type = 'real',
                    value = {-1:'-((G**2)/(2.0*48.0*cmath.pi**2))*11.0*CA'},
                    texname = '\delta Gg')

G_UVq = CTParameter(name = 'G_UVq',
                    type = 'real',
                    value = {-1:'((G**2)/(2.0*48.0*cmath.pi**2))*4.0*TF'},
                    texname = '\delta Gq')

G_UVc = CTParameter(name = 'G_UVc',
                    type = 'real',
                    value = {-1:'((G**2)/(2.0*48.0*cmath.pi**2))*4.0*TF',
                    0:'cond(MC,0.0,-((G**2)/(2.0*48.0*cmath.pi**2))*4.0*TF*reglog(MC**2/MU_R**2))'},
                    texname = '\delta Gc')

G_UVb = CTParameter(name = 'G_UVb',
                    type = 'real',
                    value = {-1:'((G**2)/(2.0*48.0*cmath.pi**2))*4.0*TF',
                    0:'cond(MB,0.0,-((G**2)/(2.0*48.0*cmath.pi**2))*4.0*TF*reglog(MB**2/MU_R**2))'},
                    texname = '\delta Gb')

G_UVt = CTParameter(name = 'G_UVt',
                    type = 'real',
                    value = {-1:'((G**2)/(2.0*48.0*cmath.pi**2))*4.0*TF',
                    0:'cond(MT,0.0,-((G**2)/(2.0*48.0*cmath.pi**2))*4.0*TF*reglog(MT**2/MU_R**2))'},
                    texname = '\delta Gt')

GWcft_UV_c = CTParameter(name = 'GWcft_UV_c',
                         type = 'real',
                         value = {-1:'cond(MC,0.0,-((G**2)/(2.0*48.0*cmath.pi**2))*4.0*TF)',
                         0:'cond(MC,0.0,((G**2)/(2.0*48.0*cmath.pi**2))*4.0*TF*reglog(MC**2/MU_R**2))'
                         },
                         texname = '\delta G_{wfct\_c}')

GWcft_UV_b = CTParameter(name = 'GWcft_UV_b',
                         type = 'real',
                         value = {-1:'cond(MB,0.0,-((G**2)/(2.0*48.0*cmath.pi**2))*4.0*TF)',
                         0:'cond(MB,0.0,((G**2)/(2.0*48.0*cmath.pi**2))*4.0*TF*reglog(MB**2/MU_R**2))'
                         },
                         texname = '\delta G_{wfct\_b}')

GWcft_UV_t = CTParameter(name = 'GWcft_UV_t',
                         type = 'real ',
                         value = {-1:'cond(MT,0.0,-((G**2)/(2.0*48.0*cmath.pi**2))*4.0*TF)',
                         0:'cond(MT,0.0,((G**2)/(2.0*48.0*cmath.pi**2))*4.0*TF*reglog(MT**2/MU_R**2))'
                         },
                         texname = '\delta G_{wfct\_t}')

cWcft_UV = CTParameter(name = 'cWcft_UV',
                       type = 'real',
                       value = {-1:'cond(MC,0.0,-((G**2)/(2.0*16.0*cmath.pi**2))*3.0*CF)',
                       0:'cond(MC,0.0,-((G**2)/(2.0*16.0*cmath.pi**2))*CF*(4.0-3.0*reglog(MC**2/MU_R**2)))'
                       },
                       texname = '\delta Z_c')

bWcft_UV = CTParameter(name = 'bWcft_UV',
                       type = 'real',
                       value = {-1:'cond(MB,0.0,-((G**2)/(2.0*16.0*cmath.pi**2))*3.0*CF)',
                       0:'cond(MB,0.0,-((G**2)/(2.0*16.0*cmath.pi**2))*CF*(4.0-3.0*reglog(MB**2/MU_R**2)))'
                       },
                       texname = '\delta Z_b')

tWcft_UV = CTParameter(name = 'tWcft_UV',
                       type = 'real',
                       value = {-1:'cond(MT,0.0,-((G**2)/(2.0*16.0*cmath.pi**2))*3.0*CF)',
                       0:'cond(MT,0.0,-((G**2)/(2.0*16.0*cmath.pi**2))*CF*(4.0-3.0*reglog(MT**2/MU_R**2)))'
                       },
                       texname = '\delta Z_t')

bMass_UV = CTParameter(name = 'bMass_UV',
                       type = 'complex',
                       value = {-1:'cond(MB,0.0,complex(0,1)*((G**2)/(16.0*cmath.pi**2))*(3.0*CF)*MB)',
                       0:'cond(MB,0.0,complex(0,1)*((G**2)/(16.0*cmath.pi**2))*CF*(4.0-3.0*reglog(MB**2/MU_R**2))*MB)'
                       },
                       texname = '\delta m_b')

cMass_UV = CTParameter(name = 'cMass_UV',
                       type = 'complex',
                       value = {-1:'cond(MC,0.0,complex(0,1)*((G**2)/(16.0*cmath.pi**2))*(3.0*CF)*MC)',
                       0:'cond(MC,0.0,complex(0,1)*((G**2)/(16.0*cmath.pi**2))*CF*(4.0-3.0*reglog(MC**2/MU_R**2))*MC)'
                       },
                       texname = '\delta m_c')

tMass_UV = CTParameter(name = 'tMass_UV',
                       type = 'cocomplex',
                       value = {-1:'cond(MT,0.0,complex(0,1)*((G**2)/(16.0*cmath.pi**2))*3.0*CF*MT)',
                       0:'cond(MT,0.0,complex(0,1)*((G**2)/(16.0*cmath.pi**2))*CF*(4.0-3.0*reglog(MT**2/MU_R**2))*MT)'
                       },
                       texname = '\delta m_t')



# ================================== #
# QED                                #
# Generate automatically by WriteUFO #
# ================================== #


tMass_UV_EW = CTParameter(name = 'tMass_UV_EW',
                          type = 'complex',
                          value = {-1:'(ee**2*MT*(MW**2*(3 + 24*sw**2 - 32*sw**4) + cw**2*(9*MT**2 + 2*MW**2*(3 - 16*sw**2))))/(384.*cw**2*MW**2*cmath.pi**2*sw**2)',
                                    0:'-(ee**2*MT*(MW**2*(3 + 24*sw**2 - 32*sw**4) + cw**2*(9*MT**2 + 2*MW**2*(3 - 16*sw**2)))*reglog(4*cmath.pi))/(384.*cw**2*MW**2*cmath.pi**2*sw**2) + (ee**2*MT*((-9*MH*(-MH**2 + 4*MT**2)**1.5*arg(-MH + cmath.sqrt(-MH**2 + 4*MT**2)*complex(0,1)))/(MT**2*MW**2) + (9*MH*(-MH**2 + 4*MT**2)**1.5*arg(MH + cmath.sqrt(-MH**2 + 4*MT**2)*complex(0,1)))/(MT**2*MW**2) - (9*MH*(-MH**2 + 4*MT**2)**1.5*arg(MH**2 - 2*MT**2 + MH*cmath.sqrt(-MH**2 + 4*MT**2)*complex(0,1)))/(MT**2*MW**2) + (9*MH*(-MH**2 + 4*MT**2)**1.5*arg(-MH**2 + 2*MT**2 + MH*cmath.sqrt(-MH**2 + 4*MT**2)*complex(0,1)))/(MT**2*MW**2) + (MZ*cmath.sqrt(4*MT**2 - MZ**2)*(MW**2*MZ**2*(9 - 24*sw**2 + 32*sw**4) + MT**2*(9*cw**2*MZ**2 + 2*MW**2*(-9 - 24*sw**2 + 32*sw**4)))*arg(-MZ + cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)))/(cw**2*MT**4*MW**2) - (MZ*cmath.sqrt(4*MT**2 - MZ**2)*(MW**2*MZ**2*(9 - 24*sw**2 + 32*sw**4) + MT**2*(9*cw**2*MZ**2 + 2*MW**2*(-9 - 24*sw**2 + 32*sw**4)))*arg(MZ + cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)))/(cw**2*MT**4*MW**2) - (MZ*cmath.sqrt(4*MT**2 - MZ**2)*(MW**2*MZ**2*(9 - 24*sw**2 + 32*sw**4) + MT**2*(9*cw**2*MZ**2 + 2*MW**2*(-9 - 24*sw**2 + 32*sw**4)))*arg(2*MT**2 - MZ**2 + MZ*cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)))/(cw**2*MT**4*MW**2) + (MZ*cmath.sqrt(4*MT**2 - MZ**2)*(MW**2*MZ**2*(9 - 24*sw**2 + 32*sw**4) + MT**2*(9*cw**2*MZ**2 + 2*MW**2*(-9 - 24*sw**2 + 32*sw**4)))*arg(-2*MT**2 + MZ**2 + MZ*cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)))/(cw**2*MT**4*MW**2) - (36*MH**2*reglog(MH))/MW**2 + (4*(3*cw**2*MT**2*(-3*MH**2 + 18*MT**2 - 3*MZ**2 + 32*MW**2*sw**2) + MW**2*(MZ**2*(-9 + 24*sw**2 - 32*sw**4) + MT**2*(27 + 24*sw**2 - 32*sw**4)))*reglog(MT))/(cw**2*MT**2*MW**2) + (9*MH**2*(MH - 2*MT)*(MH + 2*MT)*reglog(4*MH**2*MT**2))/(MT**2*MW**2) - (9*(MH - 2*MT)*(MH + 2*MT)*(MH**2 - 2*MT**2)*reglog(4*MT**4))/(MT**2*MW**2) + ((2*MT**2 - MZ**2)*(MW**2*MZ**2*(9 - 24*sw**2 + 32*sw**4) + MT**2*(9*cw**2*MZ**2 + 2*MW**2*(-9 - 24*sw**2 + 32*sw**4)))*reglog(4*MT**4))/(cw**2*MT**4*MW**2) - (18*(MT - MW)**2*(MT + MW)**2*(MT**2 + 2*MW**2)*reglog(MT - MW))/(MT**4*MW**2) - (36*(2*MT**2 - MW**2)*(MT**2 + 2*MW**2)*reglog(MW))/MT**4 - (18*(MT - MW)**2*(MT + MW)**2*(MT**2 + 2*MW**2)*reglog(MT + MW))/(MT**4*MW**2) - (4*MZ**2*(9*cw**2*MT**2 + MW**2*(9 - 24*sw**2 + 32*sw**4))*reglog(MZ))/(cw**2*MT**2*MW**2) + (MZ**2*(MW**2*MZ**2*(9 - 24*sw**2 + 32*sw**4) + MT**2*(9*cw**2*MZ**2 + 2*MW**2*(-9 - 24*sw**2 + 32*sw**4)))*reglog(4*MT**2*MZ**2))/(cw**2*MT**4*MW**2) - (2*(cw**2*(18*MW**4 + 9*MH**2*MT**2*(1 + reglog(4)) + 9*MT**4*(-8 - 14*reglog(2) - 3*reglog(cmath.pi)) + MT**2*(9*MZ**2*(1 + reglog(4)) + MW**2*(-9*(1 + reglog(16) + 2*reglog(cmath.pi)) + 32*sw**2*(4 + reglog(64) + 3*reglog(cmath.pi))))) + MW**2*(MZ**2*(9 - 24*sw**2 + 32*sw**4)*(1 + reglog(4)) - MT**2*(24*sw**2*(4 + reglog(1024) + 3*reglog(cmath.pi)) - 32*sw**4*(4 + reglog(1024) + 3*reglog(cmath.pi)) + 9*(2 + reglog(64*cmath.pi))))))/(cw**2*MT**2*MW**2) + (12*(MW**2*(3 + 24*sw**2 - 32*sw**4) + cw**2*(9*MT**2 + 2*MW**2*(3 - 16*sw**2)))*reglog(MU_R))/(cw**2*MW**2)))/(2304.*cmath.pi**2*sw**2)'},
                          texname = '\delta m_t^{EW}')


HMass2_UV_EW = CTParameter(name = 'HMass2_UV_EW',
                           type = 'complex',
                           value = {-1:'(ee**2*(16*MW**4 + 2*cw**2*MW**2*(-2*MH**2 + MZ**2) + cw**4*(15*MH**4 + 36*MW**4 - 24*MT**4*Ncol + MH**2*(-6*MW**2 + MZ**2 + 4*MT**2*Ncol))))/(128.*cw**4*MW**2*cmath.pi**2*sw**2)',
                                     0:'(ee**2*((4*MT**2*(-MH**2 + 4*MT**2)**1.5*Ncol*arg(-MH**2 + 2*MT**2 + MH*cmath.sqrt(-MH**2 + 4*MT**2)*complex(0,1)))/MH - (2*cmath.sqrt(-MH**2 + 4*MW**2)*(MH**4 - 4*MH**2*MW**2 + 12*MW**4)*arg(-MH**2 + 2*MW**2 + MH*cmath.sqrt(-MH**2 + 4*MW**2)*complex(0,1)))/MH - (cmath.sqrt(-MH**2 + 4*MZ**2)*(cw**4*MH**4 + 16*MW**4 - 4*cw**2*MW**2*(MH**2 + MZ**2))*arg(-MH**2 + 2*MZ**2 + MH*cmath.sqrt(-MH**2 + 4*MZ**2)*complex(0,1)))/(cw**4*MH) - 24*MH**4*reglog(MH) - 8*MT**2*(MH**2 - 6*MT**2)*Ncol*reglog(MT) - 4*(MH**4 - 3*MH**2*MW**2 + 18*MW**4)*reglog(MW) - (2*(16*MW**4 + 2*cw**2*MW**2*(-2*MH**2 + MZ**2) + cw**4*MH**2*(MH**2 + MZ**2))*reglog(MZ))/cw**4 - ((16*MW**4 + 2*cw**2*MW**2*(-2*MH**2 + MZ**2) + cw**4*(15*MH**4 + 36*MW**4 - 24*MT**4*Ncol + MH**2*(-6*MW**2 + MZ**2 + 4*MT**2*Ncol)))*reglog(4*cmath.pi))/cw**4 + (8*MW**4*(3 + reglog(16) + 2*reglog(cmath.pi)) + cw**2*MW**2*(MZ**2*(-6 + reglog(16) + 2*reglog(cmath.pi)) - 4*MH**2*(2 + reglog(4*cmath.pi))) + cw**4*(MH**4*(27 - 3*cmath.sqrt(3)*cmath.pi + 30*reglog(2) + 15*reglog(cmath.pi)) + 4*(-2*MT**4*Ncol*(5 + reglog(64) + 3*reglog(cmath.pi)) + 9*MW**4*(1 + reglog(4*cmath.pi))) + MH**2*(-2*MW**2*(7 + reglog(64) + 3*reglog(cmath.pi)) + MZ**2*(1 + reglog(4*cmath.pi)) + 4*MT**2*Ncol*(2 + reglog(4*cmath.pi)))))/cw**4 + (2*(16*MW**4 + 2*cw**2*MW**2*(-2*MH**2 + MZ**2) + cw**4*(15*MH**4 + 36*MW**4 - 24*MT**4*Ncol + MH**2*(-6*MW**2 + MZ**2 + 4*MT**2*Ncol)))*reglog(MU_R))/cw**4))/(128.*MW**2*cmath.pi**2*sw**2)'},
                           texname = '\delta m2_H^{EW}')


WMass2_UV_EW = CTParameter(name = 'WMass2_UV_EW',
                           type = 'complex',
                           value = {-1:'-(ee**2*(cw**4*(44*MW**2 + 6*MZ**2) - 6*MW**2*sw**4 + cw**2*(3*MT**2*Ncol + MW**2*(-31 - 6*Ncol + 38*sw**2))))/(96.*cw**2*cmath.pi**2*sw**2)',
                                     0:'(ee**2*(cw**4*(44*MW**2 + 6*MZ**2) - 6*MW**2*sw**4 + cw**2*(3*MT**2*Ncol + MW**2*(-31 - 6*Ncol + 38*sw**2)))*reglog(4*cmath.pi))/(96.*cw**2*cmath.pi**2*sw**2) + (ee**2*(-3*MH*cmath.sqrt(-MH**2 + 4*MW**2)*(MH**4 - 4*MH**2*MW**2 + 12*MW**4)*arg(-MH + cmath.sqrt(-MH**2 + 4*MW**2)*complex(0,1)) + 3*MH*cmath.sqrt(-MH**2 + 4*MW**2)*(MH**4 - 4*MH**2*MW**2 + 12*MW**4)*arg(MH + cmath.sqrt(-MH**2 + 4*MW**2)*complex(0,1)) - 3*MH*cmath.sqrt(-MH**2 + 4*MW**2)*(MH**4 - 4*MH**2*MW**2 + 12*MW**4)*arg(MH**2 - 2*MW**2 + MH*cmath.sqrt(-MH**2 + 4*MW**2)*complex(0,1)) + 3*MH*cmath.sqrt(-MH**2 + 4*MW**2)*(MH**4 - 4*MH**2*MW**2 + 12*MW**4)*arg(-MH**2 + 2*MW**2 + MH*cmath.sqrt(-MH**2 + 4*MW**2)*complex(0,1)) - (3*MZ*cmath.sqrt(4*MW**2 - MZ**2)*(cw**2*(-4*MW**2*MZ**2 + MZ**4) + cw**4*(-60*MW**4 - 44*MW**2*MZ**2 + 8*MZ**4) + 12*MW**4*sw**4)*arg(-MZ + cmath.sqrt(4*MW**2 - MZ**2)*complex(0,1)))/cw**2 + (3*MZ*cmath.sqrt(4*MW**2 - MZ**2)*(cw**2*(-4*MW**2*MZ**2 + MZ**4) + cw**4*(-60*MW**4 - 44*MW**2*MZ**2 + 8*MZ**4) + 12*MW**4*sw**4)*arg(MZ + cmath.sqrt(4*MW**2 - MZ**2)*complex(0,1)))/cw**2 + (3*MZ*cmath.sqrt(4*MW**2 - MZ**2)*(cw**2*(-4*MW**2*MZ**2 + MZ**4) + cw**4*(-60*MW**4 - 44*MW**2*MZ**2 + 8*MZ**4) + 12*MW**4*sw**4)*arg(2*MW**2 - MZ**2 + MZ*cmath.sqrt(4*MW**2 - MZ**2)*complex(0,1)))/cw**2 - (3*MZ*cmath.sqrt(4*MW**2 - MZ**2)*(cw**2*(-4*MW**2*MZ**2 + MZ**4) + cw**4*(-60*MW**4 - 44*MW**2*MZ**2 + 8*MZ**4) + 12*MW**4*sw**4)*arg(-2*MW**2 + MZ**2 + MZ*cmath.sqrt(4*MW**2 - MZ**2)*complex(0,1)))/cw**2 + 2*(3*MH**4*MW**2 - 18*MH**2*MW**4 + 166*MW**6 - 428*cw**2*MW**6 - 18*MW**4*MZ**2 - 216*cw**2*MW**4*MZ**2 + 3*MW**2*MZ**4 + 24*cw**2*MW**2*MZ**4 - 6*MT**4*MW**2*Ncol - 12*MT**2*MW**4*Ncol + 60*MW**6*Ncol - 356*MW**6*sw**2 + (72*MW**6*sw**4)/cw**2 + 372*MW**6*reglog(2) - 528*cw**2*MW**6*reglog(2) - 72*cw**2*MW**4*MZ**2*reglog(2) - 36*MT**2*MW**4*Ncol*reglog(2) + 72*MW**6*Ncol*reglog(2) - 456*MW**6*sw**2*reglog(2) + (72*MW**6*sw**4*reglog(2))/cw**2 - 3*(MH**6 - 6*MH**4*MW**2 + 18*MH**2*MW**4)*reglog(MH) + 12*MT**6*Ncol*reglog(MT) - 6*MT**6*Ncol*reglog(MT - MW) + 18*MT**2*MW**4*Ncol*reglog(MT - MW) - 12*MW**6*Ncol*reglog(MT - MW) + 3*MH**6*reglog(MW) - 18*MH**4*MW**2*reglog(MW) + 54*MH**2*MW**4*reglog(MW) - 372*MW**6*reglog(MW) + 528*cw**2*MW**6*reglog(MW) + 18*MW**4*MZ**2*reglog(MW) + 36*cw**2*MW**4*MZ**2*reglog(MW) - 18*MW**2*MZ**4*reglog(MW) - 180*cw**2*MW**2*MZ**4*reglog(MW) + 3*MZ**6*reglog(MW) + 24*cw**2*MZ**6*reglog(MW) - 48*MW**6*Ncol*reglog(MW) + 456*MW**6*sw**2*reglog(MW) - (72*MW**6*sw**4*reglog(MW))/cw**2 + (36*MW**4*MZ**2*sw**4*reglog(MW))/cw**2 - 6*MT**6*Ncol*reglog(MT + MW) + 18*MT**2*MW**4*Ncol*reglog(MT + MW) - 12*MW**6*Ncol*reglog(MT + MW) - 18*MW**4*MZ**2*reglog(MZ) + 36*cw**2*MW**4*MZ**2*reglog(MZ) + 18*MW**2*MZ**4*reglog(MZ) + 180*cw**2*MW**2*MZ**4*reglog(MZ) - 3*MZ**6*reglog(MZ) - 24*cw**2*MZ**6*reglog(MZ) - (36*MW**4*MZ**2*sw**4*reglog(MZ))/cw**2 + 186*MW**6*reglog(cmath.pi) - 264*cw**2*MW**6*reglog(cmath.pi) - 36*cw**2*MW**4*MZ**2*reglog(cmath.pi) - 18*MT**2*MW**4*Ncol*reglog(cmath.pi) + 36*MW**6*Ncol*reglog(cmath.pi) - 228*MW**6*sw**2*reglog(cmath.pi) + (36*MW**6*sw**4*reglog(cmath.pi))/cw**2 + 372*MW**6*reglog(MU_R) - 528*cw**2*MW**6*reglog(MU_R) - 72*cw**2*MW**4*MZ**2*reglog(MU_R) - 36*MT**2*MW**4*Ncol*reglog(MU_R) + 72*MW**6*Ncol*reglog(MU_R) - 456*MW**6*sw**2*reglog(MU_R) + (72*MW**6*sw**4*reglog(MU_R))/cw**2)))/(1152.*MW**4*cmath.pi**2*sw**2)'},
                           texname = '\delta m2_W^{EW}')


ZMass2_UV_EW = CTParameter(name = 'ZMass2_UV_EW',
                           type = 'complex',
                           value = {-1:'-(ee**2*(36*MW**2*(-1 + 2*cw**6 - 2*cw**2*sw**4) + cw**2*(18*MT**2*Ncol + MZ**2*(-39 + 117*cw**4 + 72*sw**2 + 6*cw**2*sw**2 - 147*sw**4 - 4*Ncol*(9 - 18*sw**2 + 20*sw**4)))))/(576.*cw**4*cmath.pi**2*sw**2)',
                                     0:'(ee**2*(36*MW**2*(-1 + 2*cw**6 - 2*cw**2*sw**4) + cw**2*(18*MT**2*Ncol + MZ**2*(-39 + 117*cw**4 + 72*sw**2 + 6*cw**2*sw**2 - 147*sw**4 - 4*Ncol*(9 - 18*sw**2 + 20*sw**4))))*reglog(4*cmath.pi))/(576.*cw**4*cmath.pi**2*sw**2) + (ee**2*((-4*cw**2*cmath.sqrt(4*MT**2 - MZ**2)*Ncol*(MZ**2*(9 - 24*sw**2 + 32*sw**4) + MT**2*(-9 - 48*sw**2 + 64*sw**4))*arg(2*MT**2 - MZ**2 + MZ*cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)))/MZ + (18*cw**2*cmath.sqrt(4*MW**2 - MZ**2)*(cw**4*(60*MW**2 + 39*MZ**2) + 2*cw**2*(-4*MW**2 + MZ**2)*sw**2 - (20*MW**2 + MZ**2)*sw**4)*arg(2*MW**2 - MZ**2 + MZ*cmath.sqrt(4*MW**2 - MZ**2)*complex(0,1)))/MZ - (9*MH*cmath.sqrt(-MH**2 + 4*MZ**2)*(12*MW**2*MZ**2 + cw**2*(MH**4 - 4*MH**2*MZ**2))*arg(-MH + cmath.sqrt(-MH**2 + 4*MZ**2)*complex(0,1)))/MZ**4 + (9*MH*cmath.sqrt(-MH**2 + 4*MZ**2)*(12*MW**2*MZ**2 + cw**2*(MH**4 - 4*MH**2*MZ**2))*arg(MH + cmath.sqrt(-MH**2 + 4*MZ**2)*complex(0,1)))/MZ**4 - (9*MH*cmath.sqrt(-MH**2 + 4*MZ**2)*(12*MW**2*MZ**2 + cw**2*(MH**4 - 4*MH**2*MZ**2))*arg(MH**2 - 2*MZ**2 + MH*cmath.sqrt(-MH**2 + 4*MZ**2)*complex(0,1)))/MZ**4 + (9*MH*cmath.sqrt(-MH**2 + 4*MZ**2)*(12*MW**2*MZ**2 + cw**2*(MH**4 - 4*MH**2*MZ**2))*arg(-MH**2 + 2*MZ**2 + MH*cmath.sqrt(-MH**2 + 4*MZ**2)*complex(0,1)))/MZ**4 + (36*cw**2*MH**2*(MH**2 - 3*MZ**2)*reglog(MH))/MZ**2 + 8*cw**2*Ncol*(27*MT**2 + MZ**2*(-9 + 24*sw**2 - 32*sw**4))*reglog(MT) + 36*cw**2*(3*cw**4*(8*MW**2 + 13*MZ**2) + 2*cw**2*MZ**2*sw**2 - (24*MW**2 + MZ**2)*sw**4)*reglog(MW) + (4*(108*MW**2*MZ**2 + cw**2*(9*MH**4 - 45*MH**2*MZ**2 - MZ**4*(9*(13 - 24*sw**2 + 48*sw**4) + 2*Ncol*(45 - 84*sw**2 + 88*sw**4))))*reglog(MZ))/MZ**2 - (9*MH**2*(12*MW**2*MZ**2 + cw**2*(MH**4 - 4*MH**2*MZ**2))*reglog(4*MH**2*MZ**2))/MZ**4 + (9*(MH**2 - 2*MZ**2)*(12*MW**2*MZ**2 + cw**2*(MH**4 - 4*MH**2*MZ**2))*reglog(4*MZ**4))/MZ**4 + (2*(-108*MW**2*MZ**2*(-2 + reglog(1/(16.*cmath.pi))) + 9*cw**6*MZ**2*(24*MW**2*(-5 + reglog(1/(4.*cmath.pi))) + MZ**2*(-80 - 78*reglog(2) - 39*reglog(cmath.pi))) + 6*cw**4*MZ**2*sw**2*(24*MW**2 + MZ**2*(-8 - 6*reglog(2) - 3*reglog(cmath.pi))) + cw**2*(9*MH**4*(1 + reglog(4)) - 18*MH**2*MZ**2*(3 + reglog(16)) + MZ**2*(2*(-36*MW**2*sw**4*(-5 - 6*reglog(2) - 3*reglog(cmath.pi)) + MT**2*Ncol*(-96*sw**2 + 128*sw**4 - 9*(2 + reglog(64) + 3*reglog(cmath.pi)))) + MZ**2*(4*Ncol*(9 - 18*sw**2 + 20*sw**4)*(5 + reglog(64) + 3*reglog(cmath.pi)) + 3*(59 + 78*reglog(2) + 39*reglog(cmath.pi) - 24*sw**2*(5 + reglog(64) + 3*reglog(cmath.pi)) + sw**4*(248 + 294*reglog(2) + 147*reglog(cmath.pi))))))))/MZ**2 - 12*(36*MW**2*(-1 + 2*cw**6 - 2*cw**2*sw**4) + cw**2*(18*MT**2*Ncol + MZ**2*(-39 + 117*cw**4 + 72*sw**2 + 6*cw**2*sw**2 - 147*sw**4 - 4*Ncol*(9 - 18*sw**2 + 20*sw**4))))*reglog(MU_R)))/(3456.*cw**4*cmath.pi**2*sw**2)'},
                           texname = '\delta m2_Z^{EW}')


tWcft_UV_EW_R = CTParameter(name = 'tWcft_UV_EW_R',
                            type = 'complex',
                            value = {-1:'-(ee**2*(8*MW**2*sw**4 + 3*cw**2*(3*MT**2 + 8*MW**2*sw**2)))/(288.*cw**2*MW**2*cmath.pi**2*sw**2)',
                                      0:'-(ee**2*(3*MH**2 - 4*MT**2)*reglog(MH))/(64.*MW**2*cmath.pi**2*sw**2) + (ee**2*(-9*cw**2*MH**2*MT**2 + 30*cw**2*MT**4 + 24*MT**2*MW**2 - 9*cw**2*MT**2*MZ**2 - 12*MW**2*MZ**2 + 32*cw**2*MT**2*MW**2*sw**2 + 32*MW**2*MZ**2*sw**2 - 32*MT**2*MW**2*sw**4 - 32*MW**2*MZ**2*sw**4)*reglog(MT))/(192.*cw**2*MT**2*MW**2*cmath.pi**2*sw**2) + (3*ee**2*MH**2*(MH**2 - 2*MT**2)*reglog(4*MH**2*MT**2))/(256.*MT**2*MW**2*cmath.pi**2*sw**2) - (ee**2*(36*cw**2*MH**4*MT**4 - 144*cw**2*MH**2*MT**6 + 144*cw**2*MT**8 + 120*MT**6*MW**2 - 9*cw**2*MH**4*MT**2*MZ**2 + 36*cw**2*MH**2*MT**4*MZ**2 - 96*cw**2*MT**6*MZ**2 - 180*MT**4*MW**2*MZ**2 + 48*cw**2*MT**4*MZ**4 + 84*MT**2*MW**2*MZ**4 - 9*cw**2*MT**2*MZ**6 - 12*MW**2*MZ**6 + 64*MT**6*MW**2*sw**2 + 160*MT**4*MW**2*MZ**2*sw**2 - 160*MT**2*MW**2*MZ**4*sw**2 + 32*MW**2*MZ**6*sw**2 - 256*MT**6*MW**2*sw**4 + 128*MT**2*MW**2*MZ**4*sw**4 - 32*MW**2*MZ**6*sw**4)*reglog(4*MT**4))/(768.*cw**2*MT**4*MW**2*(2*MT - MZ)*(2*MT + MZ)*cmath.pi**2*sw**2) + (ee**2*(MT - MW)*(MT + MW)*(MT**4 + MT**2*MW**2 + 4*MW**4)*reglog(MT - MW))/(64.*MT**4*MW**2*cmath.pi**2*sw**2) + (ee**2*MW**2*(-3*MT**2 + 4*MW**2)*reglog(MW))/(32.*MT**4*cmath.pi**2*sw**2) + (ee**2*(MT - MW)*(MT + MW)*(MT**4 + MT**2*MW**2 + 4*MW**4)*reglog(MT + MW))/(64.*MT**4*MW**2*cmath.pi**2*sw**2) - (ee**2*(-72*MT**4*MW**2 + 72*cw**2*MT**4*MZ**2 + 144*MT**2*MW**2*MZ**2 - 27*cw**2*MT**2*MZ**4 - 36*MW**2*MZ**4 - 192*MT**4*MW**2*sw**2 - 192*MT**2*MW**2*MZ**2*sw**2 + 96*MW**2*MZ**4*sw**2 + 256*MT**4*MW**2*sw**4 + 128*MT**2*MW**2*MZ**2*sw**4 - 96*MW**2*MZ**4*sw**4)*reglog(MZ))/(576.*cw**2*MT**2*MW**2*(2*MT - MZ)*(2*MT + MZ)*cmath.pi**2*sw**2) + (ee**2*MZ**2*(-60*MT**4*MW**2 + 30*cw**2*MT**4*MZ**2 + 60*MT**2*MW**2*MZ**2 - 9*cw**2*MT**2*MZ**4 - 12*MW**2*MZ**4 - 32*MT**4*MW**2*sw**2 - 96*MT**2*MW**2*MZ**2*sw**2 + 32*MW**2*MZ**4*sw**2 + 128*MT**4*MW**2*sw**4 + 64*MT**2*MW**2*MZ**2*sw**4 - 32*MW**2*MZ**4*sw**4)*reglog(4*MT**2*MZ**2))/(768.*cw**2*MT**4*MW**2*(2*MT - MZ)*(2*MT + MZ)*cmath.pi**2*sw**2) + (ee**2*(-216*cw**2*MH**2*MT**6*cmath.sqrt(4*MT**2 - MZ**2) + 288*cw**2*MT**8*cmath.sqrt(4*MT**2 - MZ**2) + 432*MT**6*MW**2*cmath.sqrt(4*MT**2 - MZ**2) + 144*cw**2*MT**6*MW**2*cmath.sqrt(4*MT**2 - MZ**2) - 576*cw**2*MT**4*MW**4*cmath.sqrt(4*MT**2 - MZ**2) + 54*cw**2*MH**2*MT**4*MZ**2*cmath.sqrt(4*MT**2 - MZ**2) - 288*cw**2*MT**6*MZ**2*cmath.sqrt(4*MT**2 - MZ**2) - 396*MT**4*MW**2*MZ**2*cmath.sqrt(4*MT**2 - MZ**2) - 36*cw**2*MT**4*MW**2*MZ**2*cmath.sqrt(4*MT**2 - MZ**2) + 144*cw**2*MT**2*MW**4*MZ**2*cmath.sqrt(4*MT**2 - MZ**2) + 54*cw**2*MT**4*MZ**4*cmath.sqrt(4*MT**2 - MZ**2) + 72*MT**2*MW**2*MZ**4*cmath.sqrt(4*MT**2 - MZ**2) + 384*MT**6*MW**2*cmath.sqrt(4*MT**2 - MZ**2)*sw**2 - 1024*cw**2*MT**6*MW**2*cmath.sqrt(4*MT**2 - MZ**2)*sw**2 + 672*MT**4*MW**2*MZ**2*cmath.sqrt(4*MT**2 - MZ**2)*sw**2 + 256*cw**2*MT**4*MW**2*MZ**2*cmath.sqrt(4*MT**2 - MZ**2)*sw**2 - 192*MT**2*MW**2*MZ**4*cmath.sqrt(4*MT**2 - MZ**2)*sw**2 - 1024*MT**6*MW**2*cmath.sqrt(4*MT**2 - MZ**2)*sw**4 - 512*MT**4*MW**2*MZ**2*cmath.sqrt(4*MT**2 - MZ**2)*sw**4 + 192*MT**2*MW**2*MZ**4*cmath.sqrt(4*MT**2 - MZ**2)*sw**4 + 108*cw**2*MH**3*MT**4*cmath.sqrt(-MH**2 + 4*MT**2)*cmath.sqrt(4*MT**2 - MZ**2)*arg(-MH + cmath.sqrt(-MH**2 + 4*MT**2)*complex(0,1)) - 216*cw**2*MH*MT**6*cmath.sqrt(-MH**2 + 4*MT**2)*cmath.sqrt(4*MT**2 - MZ**2)*arg(-MH + cmath.sqrt(-MH**2 + 4*MT**2)*complex(0,1)) - 27*cw**2*MH**3*MT**2*cmath.sqrt(-MH**2 + 4*MT**2)*MZ**2*cmath.sqrt(4*MT**2 - MZ**2)*arg(-MH + cmath.sqrt(-MH**2 + 4*MT**2)*complex(0,1)) + 54*cw**2*MH*MT**4*cmath.sqrt(-MH**2 + 4*MT**2)*MZ**2*cmath.sqrt(4*MT**2 - MZ**2)*arg(-MH + cmath.sqrt(-MH**2 + 4*MT**2)*complex(0,1)) - 108*cw**2*MH**3*MT**4*cmath.sqrt(-MH**2 + 4*MT**2)*cmath.sqrt(4*MT**2 - MZ**2)*arg(MH + cmath.sqrt(-MH**2 + 4*MT**2)*complex(0,1)) + 216*cw**2*MH*MT**6*cmath.sqrt(-MH**2 + 4*MT**2)*cmath.sqrt(4*MT**2 - MZ**2)*arg(MH + cmath.sqrt(-MH**2 + 4*MT**2)*complex(0,1)) + 27*cw**2*MH**3*MT**2*cmath.sqrt(-MH**2 + 4*MT**2)*MZ**2*cmath.sqrt(4*MT**2 - MZ**2)*arg(MH + cmath.sqrt(-MH**2 + 4*MT**2)*complex(0,1)) - 54*cw**2*MH*MT**4*cmath.sqrt(-MH**2 + 4*MT**2)*MZ**2*cmath.sqrt(4*MT**2 - MZ**2)*arg(MH + cmath.sqrt(-MH**2 + 4*MT**2)*complex(0,1)) + 108*cw**2*MH**3*MT**4*cmath.sqrt(-MH**2 + 4*MT**2)*cmath.sqrt(4*MT**2 - MZ**2)*arg(MH**2 - 2*MT**2 + MH*cmath.sqrt(-MH**2 + 4*MT**2)*complex(0,1)) - 216*cw**2*MH*MT**6*cmath.sqrt(-MH**2 + 4*MT**2)*cmath.sqrt(4*MT**2 - MZ**2)*arg(MH**2 - 2*MT**2 + MH*cmath.sqrt(-MH**2 + 4*MT**2)*complex(0,1)) - 27*cw**2*MH**3*MT**2*cmath.sqrt(-MH**2 + 4*MT**2)*MZ**2*cmath.sqrt(4*MT**2 - MZ**2)*arg(MH**2 - 2*MT**2 + MH*cmath.sqrt(-MH**2 + 4*MT**2)*complex(0,1)) + 54*cw**2*MH*MT**4*cmath.sqrt(-MH**2 + 4*MT**2)*MZ**2*cmath.sqrt(4*MT**2 - MZ**2)*arg(MH**2 - 2*MT**2 + MH*cmath.sqrt(-MH**2 + 4*MT**2)*complex(0,1)) - 108*cw**2*MH**3*MT**4*cmath.sqrt(-MH**2 + 4*MT**2)*cmath.sqrt(4*MT**2 - MZ**2)*arg(-MH**2 + 2*MT**2 + MH*cmath.sqrt(-MH**2 + 4*MT**2)*complex(0,1)) + 216*cw**2*MH*MT**6*cmath.sqrt(-MH**2 + 4*MT**2)*cmath.sqrt(4*MT**2 - MZ**2)*arg(-MH**2 + 2*MT**2 + MH*cmath.sqrt(-MH**2 + 4*MT**2)*complex(0,1)) + 27*cw**2*MH**3*MT**2*cmath.sqrt(-MH**2 + 4*MT**2)*MZ**2*cmath.sqrt(4*MT**2 - MZ**2)*arg(-MH**2 + 2*MT**2 + MH*cmath.sqrt(-MH**2 + 4*MT**2)*complex(0,1)) - 54*cw**2*MH*MT**4*cmath.sqrt(-MH**2 + 4*MT**2)*MZ**2*cmath.sqrt(4*MT**2 - MZ**2)*arg(-MH**2 + 2*MT**2 + MH*cmath.sqrt(-MH**2 + 4*MT**2)*complex(0,1)) - 720*MT**6*MW**2*MZ*arg(-MZ + cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) + 360*cw**2*MT**6*MZ**3*arg(-MZ + cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) + 900*MT**4*MW**2*MZ**3*arg(-MZ + cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) - 198*cw**2*MT**4*MZ**5*arg(-MZ + cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) - 324*MT**2*MW**2*MZ**5*arg(-MZ + cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) + 27*cw**2*MT**2*MZ**7*arg(-MZ + cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) + 36*MW**2*MZ**7*arg(-MZ + cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) - 384*MT**6*MW**2*MZ*sw**2*arg(-MZ + cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) - 1056*MT**4*MW**2*MZ**3*sw**2*arg(-MZ + cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) + 672*MT**2*MW**2*MZ**5*sw**2*arg(-MZ + cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) - 96*MW**2*MZ**7*sw**2*arg(-MZ + cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) + 1536*MT**6*MW**2*MZ*sw**4*arg(-MZ + cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) + 384*MT**4*MW**2*MZ**3*sw**4*arg(-MZ + cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) - 576*MT**2*MW**2*MZ**5*sw**4*arg(-MZ + cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) + 96*MW**2*MZ**7*sw**4*arg(-MZ + cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) + 720*MT**6*MW**2*MZ*arg(MZ + cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) - 360*cw**2*MT**6*MZ**3*arg(MZ + cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) - 900*MT**4*MW**2*MZ**3*arg(MZ + cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) + 198*cw**2*MT**4*MZ**5*arg(MZ + cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) + 324*MT**2*MW**2*MZ**5*arg(MZ + cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) - 27*cw**2*MT**2*MZ**7*arg(MZ + cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) - 36*MW**2*MZ**7*arg(MZ + cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) + 384*MT**6*MW**2*MZ*sw**2*arg(MZ + cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) + 1056*MT**4*MW**2*MZ**3*sw**2*arg(MZ + cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) - 672*MT**2*MW**2*MZ**5*sw**2*arg(MZ + cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) + 96*MW**2*MZ**7*sw**2*arg(MZ + cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) - 1536*MT**6*MW**2*MZ*sw**4*arg(MZ + cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) - 384*MT**4*MW**2*MZ**3*sw**4*arg(MZ + cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) + 576*MT**2*MW**2*MZ**5*sw**4*arg(MZ + cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) - 96*MW**2*MZ**7*sw**4*arg(MZ + cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) + 720*MT**6*MW**2*MZ*arg(2*MT**2 - MZ**2 + MZ*cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) - 360*cw**2*MT**6*MZ**3*arg(2*MT**2 - MZ**2 + MZ*cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) - 900*MT**4*MW**2*MZ**3*arg(2*MT**2 - MZ**2 + MZ*cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) + 198*cw**2*MT**4*MZ**5*arg(2*MT**2 - MZ**2 + MZ*cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) + 324*MT**2*MW**2*MZ**5*arg(2*MT**2 - MZ**2 + MZ*cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) - 27*cw**2*MT**2*MZ**7*arg(2*MT**2 - MZ**2 + MZ*cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) - 36*MW**2*MZ**7*arg(2*MT**2 - MZ**2 + MZ*cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) + 384*MT**6*MW**2*MZ*sw**2*arg(2*MT**2 - MZ**2 + MZ*cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) + 1056*MT**4*MW**2*MZ**3*sw**2*arg(2*MT**2 - MZ**2 + MZ*cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) - 672*MT**2*MW**2*MZ**5*sw**2*arg(2*MT**2 - MZ**2 + MZ*cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) + 96*MW**2*MZ**7*sw**2*arg(2*MT**2 - MZ**2 + MZ*cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) - 1536*MT**6*MW**2*MZ*sw**4*arg(2*MT**2 - MZ**2 + MZ*cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) - 384*MT**4*MW**2*MZ**3*sw**4*arg(2*MT**2 - MZ**2 + MZ*cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) + 576*MT**2*MW**2*MZ**5*sw**4*arg(2*MT**2 - MZ**2 + MZ*cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) - 96*MW**2*MZ**7*sw**4*arg(2*MT**2 - MZ**2 + MZ*cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) - 720*MT**6*MW**2*MZ*arg(-2*MT**2 + MZ**2 + MZ*cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) + 360*cw**2*MT**6*MZ**3*arg(-2*MT**2 + MZ**2 + MZ*cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) + 900*MT**4*MW**2*MZ**3*arg(-2*MT**2 + MZ**2 + MZ*cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) - 198*cw**2*MT**4*MZ**5*arg(-2*MT**2 + MZ**2 + MZ*cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) - 324*MT**2*MW**2*MZ**5*arg(-2*MT**2 + MZ**2 + MZ*cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) + 27*cw**2*MT**2*MZ**7*arg(-2*MT**2 + MZ**2 + MZ*cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) + 36*MW**2*MZ**7*arg(-2*MT**2 + MZ**2 + MZ*cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) - 384*MT**6*MW**2*MZ*sw**2*arg(-2*MT**2 + MZ**2 + MZ*cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) - 1056*MT**4*MW**2*MZ**3*sw**2*arg(-2*MT**2 + MZ**2 + MZ*cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) + 672*MT**2*MW**2*MZ**5*sw**2*arg(-2*MT**2 + MZ**2 + MZ*cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) - 96*MW**2*MZ**7*sw**2*arg(-2*MT**2 + MZ**2 + MZ*cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) + 1536*MT**6*MW**2*MZ*sw**4*arg(-2*MT**2 + MZ**2 + MZ*cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) + 384*MT**4*MW**2*MZ**3*sw**4*arg(-2*MT**2 + MZ**2 + MZ*cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) - 576*MT**2*MW**2*MZ**5*sw**4*arg(-2*MT**2 + MZ**2 + MZ*cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) + 96*MW**2*MZ**7*sw**4*arg(-2*MT**2 + MZ**2 + MZ*cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) - 720*MT**4*MW**2*MZ**2*cmath.sqrt(4*MT**2 - MZ**2)*reglog(2) + 384*MT**6*MW**2*cmath.sqrt(4*MT**2 - MZ**2)*sw**2*reglog(2) - 1536*cw**2*MT**6*MW**2*cmath.sqrt(4*MT**2 - MZ**2)*sw**2*reglog(2) + 384*cw**2*MT**4*MW**2*MZ**2*cmath.sqrt(4*MT**2 - MZ**2)*sw**2*reglog(2) - 2048*MT**6*MW**2*cmath.sqrt(4*MT**2 - MZ**2)*sw**4*reglog(2) - 216*cw**2*MH**2*MT**6*cmath.sqrt(4*MT**2 - MZ**2)*reglog(4) + 54*cw**2*MH**2*MT**4*MZ**2*cmath.sqrt(4*MT**2 - MZ**2)*reglog(4) + 54*cw**2*MT**4*MZ**4*cmath.sqrt(4*MT**2 - MZ**2)*reglog(4) + 72*MT**2*MW**2*MZ**4*cmath.sqrt(4*MT**2 - MZ**2)*reglog(4) - 192*MT**2*MW**2*MZ**4*cmath.sqrt(4*MT**2 - MZ**2)*sw**2*reglog(4) + 192*MT**2*MW**2*MZ**4*cmath.sqrt(4*MT**2 - MZ**2)*sw**4*reglog(4) + 144*MT**6*MW**2*cmath.sqrt(4*MT**2 - MZ**2)*reglog(32) + 96*MT**4*MW**2*MZ**2*cmath.sqrt(4*MT**2 - MZ**2)*sw**2*reglog(4096) + 288*cw**2*MT**8*cmath.sqrt(4*MT**2 - MZ**2)*reglog(2/cmath.pi) - 72*cw**2*MT**6*MZ**2*cmath.sqrt(4*MT**2 - MZ**2)*reglog(64/cmath.pi) - 64*MT**4*MW**2*MZ**2*cmath.sqrt(4*MT**2 - MZ**2)*sw**4*reglog(1024/cmath.pi) - 768*cw**2*MT**6*MW**2*cmath.sqrt(4*MT**2 - MZ**2)*sw**2*reglog(cmath.pi) + 192*cw**2*MT**4*MW**2*MZ**2*cmath.sqrt(4*MT**2 - MZ**2)*sw**2*reglog(cmath.pi) - 256*MT**6*MW**2*cmath.sqrt(4*MT**2 - MZ**2)*sw**4*reglog(cmath.pi) + 288*cw**2*MT**8*cmath.sqrt(4*MT**2 - MZ**2)*reglog(4*cmath.pi) - 72*cw**2*MT**6*MZ**2*cmath.sqrt(4*MT**2 - MZ**2)*reglog(4*cmath.pi) + 768*cw**2*MT**6*MW**2*cmath.sqrt(4*MT**2 - MZ**2)*sw**2*reglog(4*cmath.pi) - 192*cw**2*MT**4*MW**2*MZ**2*cmath.sqrt(4*MT**2 - MZ**2)*sw**2*reglog(4*cmath.pi) + 256*MT**6*MW**2*cmath.sqrt(4*MT**2 - MZ**2)*sw**4*reglog(4*cmath.pi) - 64*MT**4*MW**2*MZ**2*cmath.sqrt(4*MT**2 - MZ**2)*sw**4*reglog(4*cmath.pi)))/(2304.*cw**2*MT**4*MW**2*(2*MT - MZ)*(2*MT + MZ)*cmath.sqrt(4*MT**2 - MZ**2)*cmath.pi**2*sw**2) - (ee**2*(9*cw**2*MT**2 + 24*cw**2*MW**2*sw**2 + 8*MW**2*sw**4)*reglog(MU_R))/(144.*cw**2*MW**2*cmath.pi**2*sw**2)'},
                            texname = '\delta ZR_t^{EW}')


cWcft_UV_EW_R = CTParameter(name = 'cWcft_UV_EW_R',
                            type = 'complex',
                            value = {-1:'-(ee**2*sw**2)/(36.*cw**2*cmath.pi**2)',
                                      0:'-(ee**2*sw**2*(-1 + 2*reglog(MU_R**2/MZ**2)))/(72.*cw**2*cmath.pi**2)'},
                            texname = '\delta ZR_c^{EW}')


uWcft_UV_EW_R = CTParameter(name = 'uWcft_UV_EW_R',
                            type = 'complex',
                            value = {-1:'-(ee**2*sw**2)/(36.*cw**2*cmath.pi**2)',
                                      0:'-(ee**2*sw**2*(-1 + 2*reglog(MU_R**2/MZ**2)))/(72.*cw**2*cmath.pi**2)'},
                            texname = '\delta ZR_u^{EW}')


bWcft_UV_EW_R = CTParameter(name = 'bWcft_UV_EW_R',
                            type = 'complex',
                            value = {-1:'-(ee**2*sw**2)/(144.*cw**2*cmath.pi**2)',
                                      0:'-(ee**2*sw**2*(-1 + 2*reglog(MU_R**2/MZ**2)))/(288.*cw**2*cmath.pi**2)'},
                            texname = '\delta ZR_b^{EW}')


sWcft_UV_EW_R = CTParameter(name = 'sWcft_UV_EW_R',
                            type = 'complex',
                            value = {-1:'-(ee**2*sw**2)/(144.*cw**2*cmath.pi**2)',
                                      0:'-(ee**2*sw**2*(-1 + 2*reglog(MU_R**2/MZ**2)))/(288.*cw**2*cmath.pi**2)'},
                            texname = '\delta ZR_s^{EW}')


dWcft_UV_EW_R = CTParameter(name = 'dWcft_UV_EW_R',
                            type = 'complex',
                            value = {-1:'-(ee**2*sw**2)/(144.*cw**2*cmath.pi**2)',
                                      0:'-(ee**2*sw**2*(-1 + 2*reglog(MU_R**2/MZ**2)))/(288.*cw**2*cmath.pi**2)'},
                            texname = '\delta ZR_d^{EW}')


tauWcft_UV_EW_R = CTParameter(name = 'tauWcft_UV_EW_R',
                              type = 'complex',
                              value = {-1:'-(ee**2*sw**2)/(16.*cw**2*cmath.pi**2)',
                                        0:'-(ee**2*sw**2*(-1 + 2*reglog(MU_R**2/MZ**2)))/(32.*cw**2*cmath.pi**2)'},
                              texname = '\delta ZR_tau^{EW}')


muWcft_UV_EW_R = CTParameter(name = 'muWcft_UV_EW_R',
                             type = 'complex',
                             value = {-1:'-(ee**2*sw**2)/(16.*cw**2*cmath.pi**2)',
                                       0:'-(ee**2*sw**2*(-1 + 2*reglog(MU_R**2/MZ**2)))/(32.*cw**2*cmath.pi**2)'},
                             texname = '\delta ZR_mu^{EW}')


eWcft_UV_EW_R = CTParameter(name = 'eWcft_UV_EW_R',
                            type = 'complex',
                            value = {-1:'-(ee**2*sw**2)/(16.*cw**2*cmath.pi**2)',
                                      0:'-(ee**2*sw**2*(-1 + 2*reglog(MU_R**2/MZ**2)))/(32.*cw**2*cmath.pi**2)'},
                            texname = '\delta ZR_e^{EW}')


tWcft_UV_EW_L = CTParameter(name = 'tWcft_UV_EW_L',
                            type = 'complex',
                            value = {-1:'-(ee**2*(MW**2*(3 - 4*sw**2)**2 + 3*cw**2*(3*MT**2 + 2*MW**2*(3 + 8*sw**2))))/(576.*cw**2*MW**2*cmath.pi**2*sw**2)',
                                      0:'-(ee**2*(3*MH**2 - 4*MT**2)*reglog(MH))/(64.*MW**2*cmath.pi**2*sw**2) + (ee**2*(-9*cw**2*MH**2*MT**2 + 48*cw**2*MT**4 + 6*MT**2*MW**2 - 27*cw**2*MT**2*MZ**2 - 6*MW**2*MZ**2 - 48*MT**2*MW**2*sw**2 + 32*cw**2*MT**2*MW**2*sw**2 + 112*MW**2*MZ**2*sw**2 + 96*MT**2*MW**2*sw**4 - 160*MW**2*MZ**2*sw**4)*reglog(MT))/(192.*cw**2*MT**2*MW**2*cmath.pi**2*sw**2) + (3*ee**2*MH**2*(MH**2 - 2*MT**2)*reglog(4*MH**2*MT**2))/(256.*MT**2*MW**2*cmath.pi**2*sw**2) - (ee**2*(36*cw**2*MH**4*MT**4 - 144*cw**2*MH**2*MT**6 + 144*cw**2*MT**8 + 24*MT**6*MW**2 - 9*cw**2*MH**4*MT**2*MZ**2 + 36*cw**2*MH**2*MT**4*MZ**2 - 96*cw**2*MT**6*MZ**2 - 60*MT**4*MW**2*MZ**2 + 48*cw**2*MT**4*MZ**4 + 36*MT**2*MW**2*MZ**4 - 9*cw**2*MT**2*MZ**6 - 6*MW**2*MZ**6 + 320*MT**6*MW**2*sw**2 - 160*MT**4*MW**2*MZ**2*sw**2 - 32*MT**2*MW**2*MZ**4*sw**2 + 16*MW**2*MZ**6*sw**2 - 256*MT**6*MW**2*sw**4 + 128*MT**2*MW**2*MZ**4*sw**4 - 32*MW**2*MZ**6*sw**4)*reglog(4*MT**4))/(768.*cw**2*MT**4*MW**2*(2*MT - MZ)*(2*MT + MZ)*cmath.pi**2*sw**2) + (ee**2*(MT - MW)*(MT + MW)*(2*MT**2 + MW**2)*reglog(MT - MW))/(32.*MT**4*cmath.pi**2*sw**2) - (ee**2*(MT**4 - MT**2*MW**2 - MW**4)*reglog(MW))/(16.*MT**4*cmath.pi**2*sw**2) + (ee**2*(MT - MW)*(MT + MW)*(2*MT**2 + MW**2)*reglog(MT + MW))/(32.*MT**4*cmath.pi**2*sw**2) - (ee**2*(216*cw**2*MT**6 - 72*MT**4*MW**2 - 198*cw**2*MT**4*MZ**2 + 72*MT**2*MW**2*MZ**2 + 27*cw**2*MT**2*MZ**4 - 18*MW**2*MZ**4 - 1344*MT**4*MW**2*sw**2 + 1440*MT**2*MW**2*MZ**2*sw**2 - 240*MW**2*MZ**4*sw**2 + 1792*MT**4*MW**2*sw**4 - 1792*MT**2*MW**2*MZ**2*sw**4 + 288*MW**2*MZ**4*sw**4)*reglog(MZ))/(576.*cw**2*MT**2*MW**2*(2*MT - MZ)*(2*MT + MZ)*cmath.pi**2*sw**2) + (ee**2*MZ**2*(-12*MT**4*MW**2 + 30*cw**2*MT**4*MZ**2 + 24*MT**2*MW**2*MZ**2 - 9*cw**2*MT**2*MZ**4 - 6*MW**2*MZ**4 - 160*MT**4*MW**2*sw**2 + 16*MW**2*MZ**4*sw**2 + 128*MT**4*MW**2*sw**4 + 64*MT**2*MW**2*MZ**2*sw**4 - 32*MW**2*MZ**4*sw**4)*reglog(4*MT**2*MZ**2))/(768.*cw**2*MT**4*MW**2*(2*MT - MZ)*(2*MT + MZ)*cmath.pi**2*sw**2) + (ee**2*(-216*cw**2*MH**2*MT**6*cmath.sqrt(4*MT**2 - MZ**2) + 576*cw**2*MT**8*cmath.sqrt(4*MT**2 - MZ**2) + 144*MT**6*MW**2*cmath.sqrt(4*MT**2 - MZ**2) - 288*cw**2*MT**6*MW**2*cmath.sqrt(4*MT**2 - MZ**2) - 288*cw**2*MT**4*MW**4*cmath.sqrt(4*MT**2 - MZ**2) + 54*cw**2*MH**2*MT**4*MZ**2*cmath.sqrt(4*MT**2 - MZ**2) - 360*cw**2*MT**6*MZ**2*cmath.sqrt(4*MT**2 - MZ**2) - 180*MT**4*MW**2*MZ**2*cmath.sqrt(4*MT**2 - MZ**2) + 72*cw**2*MT**4*MW**2*MZ**2*cmath.sqrt(4*MT**2 - MZ**2) + 72*cw**2*MT**2*MW**4*MZ**2*cmath.sqrt(4*MT**2 - MZ**2) + 54*cw**2*MT**4*MZ**4*cmath.sqrt(4*MT**2 - MZ**2) + 36*MT**2*MW**2*MZ**4*cmath.sqrt(4*MT**2 - MZ**2) + 1152*MT**6*MW**2*cmath.sqrt(4*MT**2 - MZ**2)*sw**2 - 1024*cw**2*MT**6*MW**2*cmath.sqrt(4*MT**2 - MZ**2)*sw**2 + 96*MT**4*MW**2*MZ**2*cmath.sqrt(4*MT**2 - MZ**2)*sw**2 + 256*cw**2*MT**4*MW**2*MZ**2*cmath.sqrt(4*MT**2 - MZ**2)*sw**2 - 96*MT**2*MW**2*MZ**4*cmath.sqrt(4*MT**2 - MZ**2)*sw**2 - 1024*MT**6*MW**2*cmath.sqrt(4*MT**2 - MZ**2)*sw**4 - 512*MT**4*MW**2*MZ**2*cmath.sqrt(4*MT**2 - MZ**2)*sw**4 + 192*MT**2*MW**2*MZ**4*cmath.sqrt(4*MT**2 - MZ**2)*sw**4 + 108*cw**2*MH**3*MT**4*cmath.sqrt(-MH**2 + 4*MT**2)*cmath.sqrt(4*MT**2 - MZ**2)*arg(-MH + cmath.sqrt(-MH**2 + 4*MT**2)*complex(0,1)) - 216*cw**2*MH*MT**6*cmath.sqrt(-MH**2 + 4*MT**2)*cmath.sqrt(4*MT**2 - MZ**2)*arg(-MH + cmath.sqrt(-MH**2 + 4*MT**2)*complex(0,1)) - 27*cw**2*MH**3*MT**2*cmath.sqrt(-MH**2 + 4*MT**2)*MZ**2*cmath.sqrt(4*MT**2 - MZ**2)*arg(-MH + cmath.sqrt(-MH**2 + 4*MT**2)*complex(0,1)) + 54*cw**2*MH*MT**4*cmath.sqrt(-MH**2 + 4*MT**2)*MZ**2*cmath.sqrt(4*MT**2 - MZ**2)*arg(-MH + cmath.sqrt(-MH**2 + 4*MT**2)*complex(0,1)) - 108*cw**2*MH**3*MT**4*cmath.sqrt(-MH**2 + 4*MT**2)*cmath.sqrt(4*MT**2 - MZ**2)*arg(MH + cmath.sqrt(-MH**2 + 4*MT**2)*complex(0,1)) + 216*cw**2*MH*MT**6*cmath.sqrt(-MH**2 + 4*MT**2)*cmath.sqrt(4*MT**2 - MZ**2)*arg(MH + cmath.sqrt(-MH**2 + 4*MT**2)*complex(0,1)) + 27*cw**2*MH**3*MT**2*cmath.sqrt(-MH**2 + 4*MT**2)*MZ**2*cmath.sqrt(4*MT**2 - MZ**2)*arg(MH + cmath.sqrt(-MH**2 + 4*MT**2)*complex(0,1)) - 54*cw**2*MH*MT**4*cmath.sqrt(-MH**2 + 4*MT**2)*MZ**2*cmath.sqrt(4*MT**2 - MZ**2)*arg(MH + cmath.sqrt(-MH**2 + 4*MT**2)*complex(0,1)) + 108*cw**2*MH**3*MT**4*cmath.sqrt(-MH**2 + 4*MT**2)*cmath.sqrt(4*MT**2 - MZ**2)*arg(MH**2 - 2*MT**2 + MH*cmath.sqrt(-MH**2 + 4*MT**2)*complex(0,1)) - 216*cw**2*MH*MT**6*cmath.sqrt(-MH**2 + 4*MT**2)*cmath.sqrt(4*MT**2 - MZ**2)*arg(MH**2 - 2*MT**2 + MH*cmath.sqrt(-MH**2 + 4*MT**2)*complex(0,1)) - 27*cw**2*MH**3*MT**2*cmath.sqrt(-MH**2 + 4*MT**2)*MZ**2*cmath.sqrt(4*MT**2 - MZ**2)*arg(MH**2 - 2*MT**2 + MH*cmath.sqrt(-MH**2 + 4*MT**2)*complex(0,1)) + 54*cw**2*MH*MT**4*cmath.sqrt(-MH**2 + 4*MT**2)*MZ**2*cmath.sqrt(4*MT**2 - MZ**2)*arg(MH**2 - 2*MT**2 + MH*cmath.sqrt(-MH**2 + 4*MT**2)*complex(0,1)) - 108*cw**2*MH**3*MT**4*cmath.sqrt(-MH**2 + 4*MT**2)*cmath.sqrt(4*MT**2 - MZ**2)*arg(-MH**2 + 2*MT**2 + MH*cmath.sqrt(-MH**2 + 4*MT**2)*complex(0,1)) + 216*cw**2*MH*MT**6*cmath.sqrt(-MH**2 + 4*MT**2)*cmath.sqrt(4*MT**2 - MZ**2)*arg(-MH**2 + 2*MT**2 + MH*cmath.sqrt(-MH**2 + 4*MT**2)*complex(0,1)) + 27*cw**2*MH**3*MT**2*cmath.sqrt(-MH**2 + 4*MT**2)*MZ**2*cmath.sqrt(4*MT**2 - MZ**2)*arg(-MH**2 + 2*MT**2 + MH*cmath.sqrt(-MH**2 + 4*MT**2)*complex(0,1)) - 54*cw**2*MH*MT**4*cmath.sqrt(-MH**2 + 4*MT**2)*MZ**2*cmath.sqrt(4*MT**2 - MZ**2)*arg(-MH**2 + 2*MT**2 + MH*cmath.sqrt(-MH**2 + 4*MT**2)*complex(0,1)) - 144*MT**6*MW**2*MZ*arg(-MZ + cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) + 360*cw**2*MT**6*MZ**3*arg(-MZ + cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) + 324*MT**4*MW**2*MZ**3*arg(-MZ + cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) - 198*cw**2*MT**4*MZ**5*arg(-MZ + cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) - 144*MT**2*MW**2*MZ**5*arg(-MZ + cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) + 27*cw**2*MT**2*MZ**7*arg(-MZ + cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) + 18*MW**2*MZ**7*arg(-MZ + cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) - 1920*MT**6*MW**2*MZ*sw**2*arg(-MZ + cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) + 480*MT**4*MW**2*MZ**3*sw**2*arg(-MZ + cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) + 192*MT**2*MW**2*MZ**5*sw**2*arg(-MZ + cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) - 48*MW**2*MZ**7*sw**2*arg(-MZ + cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) + 1536*MT**6*MW**2*MZ*sw**4*arg(-MZ + cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) + 384*MT**4*MW**2*MZ**3*sw**4*arg(-MZ + cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) - 576*MT**2*MW**2*MZ**5*sw**4*arg(-MZ + cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) + 96*MW**2*MZ**7*sw**4*arg(-MZ + cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) + 144*MT**6*MW**2*MZ*arg(MZ + cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) - 360*cw**2*MT**6*MZ**3*arg(MZ + cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) - 324*MT**4*MW**2*MZ**3*arg(MZ + cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) + 198*cw**2*MT**4*MZ**5*arg(MZ + cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) + 144*MT**2*MW**2*MZ**5*arg(MZ + cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) - 27*cw**2*MT**2*MZ**7*arg(MZ + cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) - 18*MW**2*MZ**7*arg(MZ + cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) + 1920*MT**6*MW**2*MZ*sw**2*arg(MZ + cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) - 480*MT**4*MW**2*MZ**3*sw**2*arg(MZ + cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) - 192*MT**2*MW**2*MZ**5*sw**2*arg(MZ + cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) + 48*MW**2*MZ**7*sw**2*arg(MZ + cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) - 1536*MT**6*MW**2*MZ*sw**4*arg(MZ + cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) - 384*MT**4*MW**2*MZ**3*sw**4*arg(MZ + cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) + 576*MT**2*MW**2*MZ**5*sw**4*arg(MZ + cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) - 96*MW**2*MZ**7*sw**4*arg(MZ + cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) + 144*MT**6*MW**2*MZ*arg(2*MT**2 - MZ**2 + MZ*cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) - 360*cw**2*MT**6*MZ**3*arg(2*MT**2 - MZ**2 + MZ*cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) - 324*MT**4*MW**2*MZ**3*arg(2*MT**2 - MZ**2 + MZ*cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) + 198*cw**2*MT**4*MZ**5*arg(2*MT**2 - MZ**2 + MZ*cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) + 144*MT**2*MW**2*MZ**5*arg(2*MT**2 - MZ**2 + MZ*cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) - 27*cw**2*MT**2*MZ**7*arg(2*MT**2 - MZ**2 + MZ*cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) - 18*MW**2*MZ**7*arg(2*MT**2 - MZ**2 + MZ*cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) + 1920*MT**6*MW**2*MZ*sw**2*arg(2*MT**2 - MZ**2 + MZ*cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) - 480*MT**4*MW**2*MZ**3*sw**2*arg(2*MT**2 - MZ**2 + MZ*cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) - 192*MT**2*MW**2*MZ**5*sw**2*arg(2*MT**2 - MZ**2 + MZ*cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) + 48*MW**2*MZ**7*sw**2*arg(2*MT**2 - MZ**2 + MZ*cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) - 1536*MT**6*MW**2*MZ*sw**4*arg(2*MT**2 - MZ**2 + MZ*cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) - 384*MT**4*MW**2*MZ**3*sw**4*arg(2*MT**2 - MZ**2 + MZ*cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) + 576*MT**2*MW**2*MZ**5*sw**4*arg(2*MT**2 - MZ**2 + MZ*cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) - 96*MW**2*MZ**7*sw**4*arg(2*MT**2 - MZ**2 + MZ*cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) - 144*MT**6*MW**2*MZ*arg(-2*MT**2 + MZ**2 + MZ*cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) + 360*cw**2*MT**6*MZ**3*arg(-2*MT**2 + MZ**2 + MZ*cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) + 324*MT**4*MW**2*MZ**3*arg(-2*MT**2 + MZ**2 + MZ*cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) - 198*cw**2*MT**4*MZ**5*arg(-2*MT**2 + MZ**2 + MZ*cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) - 144*MT**2*MW**2*MZ**5*arg(-2*MT**2 + MZ**2 + MZ*cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) + 27*cw**2*MT**2*MZ**7*arg(-2*MT**2 + MZ**2 + MZ*cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) + 18*MW**2*MZ**7*arg(-2*MT**2 + MZ**2 + MZ*cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) - 1920*MT**6*MW**2*MZ*sw**2*arg(-2*MT**2 + MZ**2 + MZ*cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) + 480*MT**4*MW**2*MZ**3*sw**2*arg(-2*MT**2 + MZ**2 + MZ*cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) + 192*MT**2*MW**2*MZ**5*sw**2*arg(-2*MT**2 + MZ**2 + MZ*cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) - 48*MW**2*MZ**7*sw**2*arg(-2*MT**2 + MZ**2 + MZ*cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) + 1536*MT**6*MW**2*MZ*sw**4*arg(-2*MT**2 + MZ**2 + MZ*cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) + 384*MT**4*MW**2*MZ**3*sw**4*arg(-2*MT**2 + MZ**2 + MZ*cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) - 576*MT**2*MW**2*MZ**5*sw**4*arg(-2*MT**2 + MZ**2 + MZ*cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) + 96*MW**2*MZ**7*sw**4*arg(-2*MT**2 + MZ**2 + MZ*cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) - 504*cw**2*MT**6*MZ**2*cmath.sqrt(4*MT**2 - MZ**2)*reglog(2) - 216*cw**2*MH**2*MT**6*cmath.sqrt(4*MT**2 - MZ**2)*reglog(4) + 54*cw**2*MH**2*MT**4*MZ**2*cmath.sqrt(4*MT**2 - MZ**2)*reglog(4) + 54*cw**2*MT**4*MZ**4*cmath.sqrt(4*MT**2 - MZ**2)*reglog(4) + 36*MT**2*MW**2*MZ**4*cmath.sqrt(4*MT**2 - MZ**2)*reglog(4) - 96*MT**2*MW**2*MZ**4*cmath.sqrt(4*MT**2 - MZ**2)*sw**2*reglog(4) + 192*MT**2*MW**2*MZ**4*cmath.sqrt(4*MT**2 - MZ**2)*sw**4*reglog(4) - 256*cw**2*MT**6*MW**2*cmath.sqrt(4*MT**2 - MZ**2)*sw**2*reglog(64) + 64*cw**2*MT**4*MW**2*MZ**2*cmath.sqrt(4*MT**2 - MZ**2)*sw**2*reglog(64) + 144*cw**2*MT**8*cmath.sqrt(4*MT**2 - MZ**2)*reglog(16/cmath.pi) - 36*MT**4*MW**2*MZ**2*cmath.sqrt(4*MT**2 - MZ**2)*reglog(64/cmath.pi) - 64*MT**4*MW**2*MZ**2*cmath.sqrt(4*MT**2 - MZ**2)*sw**4*reglog(1024/cmath.pi) + 36*cw**2*MT**6*MZ**2*cmath.sqrt(4*MT**2 - MZ**2)*reglog(cmath.pi) - 768*cw**2*MT**6*MW**2*cmath.sqrt(4*MT**2 - MZ**2)*sw**2*reglog(cmath.pi) + 192*cw**2*MT**4*MW**2*MZ**2*cmath.sqrt(4*MT**2 - MZ**2)*sw**2*reglog(cmath.pi) - 144*MT**6*MW**2*cmath.sqrt(4*MT**2 - MZ**2)*reglog(2*cmath.pi) + 144*cw**2*MT**8*cmath.sqrt(4*MT**2 - MZ**2)*reglog(4*cmath.pi) + 144*MT**6*MW**2*cmath.sqrt(4*MT**2 - MZ**2)*reglog(4*cmath.pi) - 36*cw**2*MT**6*MZ**2*cmath.sqrt(4*MT**2 - MZ**2)*reglog(4*cmath.pi) - 36*MT**4*MW**2*MZ**2*cmath.sqrt(4*MT**2 - MZ**2)*reglog(4*cmath.pi) - 384*MT**6*MW**2*cmath.sqrt(4*MT**2 - MZ**2)*sw**2*reglog(4*cmath.pi) + 768*cw**2*MT**6*MW**2*cmath.sqrt(4*MT**2 - MZ**2)*sw**2*reglog(4*cmath.pi) - 192*cw**2*MT**4*MW**2*MZ**2*cmath.sqrt(4*MT**2 - MZ**2)*sw**2*reglog(4*cmath.pi) + 256*MT**6*MW**2*cmath.sqrt(4*MT**2 - MZ**2)*sw**4*reglog(4*cmath.pi) - 64*MT**4*MW**2*MZ**2*cmath.sqrt(4*MT**2 - MZ**2)*sw**4*reglog(4*cmath.pi) + 384*MT**6*MW**2*cmath.sqrt(4*MT**2 - MZ**2)*sw**2*reglog(128*cmath.pi) - 256*MT**6*MW**2*cmath.sqrt(4*MT**2 - MZ**2)*sw**4*reglog(256*cmath.pi)))/(2304.*cw**2*MT**4*MW**2*(2*MT - MZ)*(2*MT + MZ)*cmath.sqrt(4*MT**2 - MZ**2)*cmath.pi**2*sw**2) - (ee**2*(9*cw**2*MT**2 + 9*MW**2 + 18*cw**2*MW**2 - 24*MW**2*sw**2 + 48*cw**2*MW**2*sw**2 + 16*MW**2*sw**4)*reglog(MU_R))/(288.*cw**2*MW**2*cmath.pi**2*sw**2)'},
                            texname = '\delta ZL_t^{EW}')


cWcft_UV_EW_L = CTParameter(name = 'cWcft_UV_EW_L',
                            type = 'complex',
                            value = {-1:'-(ee**2*(18*cw**2 + (3 - 4*sw**2)**2))/(576.*cw**2*cmath.pi**2*sw**2)',
                                      0:'-(ee**2*(-9 - 18*cw**2 + 24*sw**2 - 16*sw**4 + 36*cw**2*reglog(MU_R**2/MW**2) + 2*(3 - 4*sw**2)**2*reglog(MU_R**2/MZ**2)))/(1152.*cw**2*cmath.pi**2*sw**2)'},
                            texname = '\delta ZL_c^{EW}')


uWcft_UV_EW_L = CTParameter(name = 'uWcft_UV_EW_L',
                            type = 'complex',
                            value = {-1:'-(ee**2*(18*cw**2 + (3 - 4*sw**2)**2))/(576.*cw**2*cmath.pi**2*sw**2)',
                                      0:'-(ee**2*(-9 - 18*cw**2 + 24*sw**2 - 16*sw**4 + 36*cw**2*reglog(MU_R**2/MW**2) + 2*(3 - 4*sw**2)**2*reglog(MU_R**2/MZ**2)))/(1152.*cw**2*cmath.pi**2*sw**2)'},
                            texname = '\delta ZL_u^{EW}')


bWcft_UV_EW_L = CTParameter(name = 'bWcft_UV_EW_L',
                            type = 'complex',
                            value = {-1:'-(ee**2*(MW**2*(18*cw**2 + (3 - 2*sw**2)**2) + 9*cw**2*MT**2*CKM33*complexconjugate(CKM33)))/(576.*cw**2*MW**2*cmath.pi**2*sw**2)',
                                      0:'-(ee**2*(-9*MT**2*MW**2 - 18*cw**2*MT**2*MW**2 + 9*MW**4 + 18*cw**2*MW**4 + 12*MT**2*MW**2*sw**2 - 12*MW**4*sw**2 - 4*MT**2*MW**2*sw**4 + 4*MW**4*sw**4 + 27*cw**2*MT**4*CKM33*complexconjugate(CKM33) + 27*cw**2*MT**2*MW**2*CKM33*complexconjugate(CKM33) + 9*MT**2*MW**2*reglog(16) + 18*cw**2*MT**2*MW**2*reglog(16) - 9*MW**4*reglog(16) - 18*cw**2*MW**4*reglog(16) - 12*MT**2*MW**2*sw**2*reglog(16) + 12*MW**4*sw**2*reglog(16) + 4*MT**2*MW**2*sw**4*reglog(16) - 4*MW**4*sw**4*reglog(16) + 9*cw**2*MT**4*CKM33*complexconjugate(CKM33)*reglog(16) - 9*cw**2*MT**2*MW**2*CKM33*complexconjugate(CKM33)*reglog(16) + 18*MT**2*MW**2*reglog(cmath.pi) + 36*cw**2*MT**2*MW**2*reglog(cmath.pi) - 18*MW**4*reglog(cmath.pi) - 36*cw**2*MW**4*reglog(cmath.pi) - 24*MT**2*MW**2*sw**2*reglog(cmath.pi) + 24*MW**4*sw**2*reglog(cmath.pi) + 8*MT**2*MW**2*sw**4*reglog(cmath.pi) - 8*MW**4*sw**4*reglog(cmath.pi) + 18*cw**2*MT**4*CKM33*complexconjugate(CKM33)*reglog(cmath.pi) - 18*cw**2*MT**2*MW**2*CKM33*complexconjugate(CKM33)*reglog(cmath.pi) - 18*MT**2*MW**2*reglog(4*cmath.pi) - 36*cw**2*MT**2*MW**2*reglog(4*cmath.pi) + 18*MW**4*reglog(4*cmath.pi) + 36*cw**2*MW**4*reglog(4*cmath.pi) + 24*MT**2*MW**2*sw**2*reglog(4*cmath.pi) - 24*MW**4*sw**2*reglog(4*cmath.pi) - 8*MT**2*MW**2*sw**4*reglog(4*cmath.pi) + 8*MW**4*sw**4*reglog(4*cmath.pi) - 18*cw**2*MT**4*CKM33*complexconjugate(CKM33)*reglog(4*cmath.pi) + 18*cw**2*MT**2*MW**2*CKM33*complexconjugate(CKM33)*reglog(4*cmath.pi)))/(1152.*cw**2*(MT - MW)*MW**2*(MT + MW)*cmath.pi**2*sw**2) - (ee**2*MT**4*(MT**2 + 2*MW**2)*CKM33*complexconjugate(CKM33)*reglog(MU_R**2/MT**2))/(64.*(MT - MW)**2*MW**2*(MT + MW)**2*cmath.pi**2*sw**2) + (ee**2*(-2*MT**4 + 4*MT**2*MW**2 - 2*MW**4 + 4*MT**4*CKM33*complexconjugate(CKM33) - MT**2*MW**2*CKM33*complexconjugate(CKM33))*reglog(MU_R**2/MW**2))/(64.*(MT - MW)**2*(MT + MW)**2*cmath.pi**2*sw**2) - (ee**2*(-3 + 2*sw**2)**2*reglog(MU_R**2/MZ**2))/(576.*cw**2*cmath.pi**2*sw**2)'},
                            texname = '\delta ZL_b^{EW}')


sWcft_UV_EW_L = CTParameter(name = 'sWcft_UV_EW_L',
                            type = 'complex',
                            value = {-1:'-(ee**2*(MW**2*(18*cw**2 + (3 - 2*sw**2)**2) + 9*cw**2*MT**2*CKM32*complexconjugate(CKM32)))/(576.*cw**2*MW**2*cmath.pi**2*sw**2)',
                                      0:'-(ee**2*(-9*MT**2*MW**2 - 18*cw**2*MT**2*MW**2 + 9*MW**4 + 18*cw**2*MW**4 + 12*MT**2*MW**2*sw**2 - 12*MW**4*sw**2 - 4*MT**2*MW**2*sw**4 + 4*MW**4*sw**4 + 27*cw**2*MT**4*CKM32*complexconjugate(CKM32) + 27*cw**2*MT**2*MW**2*CKM32*complexconjugate(CKM32) + 9*MT**2*MW**2*reglog(16) + 18*cw**2*MT**2*MW**2*reglog(16) - 9*MW**4*reglog(16) - 18*cw**2*MW**4*reglog(16) - 12*MT**2*MW**2*sw**2*reglog(16) + 12*MW**4*sw**2*reglog(16) + 4*MT**2*MW**2*sw**4*reglog(16) - 4*MW**4*sw**4*reglog(16) + 9*cw**2*MT**4*CKM32*complexconjugate(CKM32)*reglog(16) - 9*cw**2*MT**2*MW**2*CKM32*complexconjugate(CKM32)*reglog(16) + 18*MT**2*MW**2*reglog(cmath.pi) + 36*cw**2*MT**2*MW**2*reglog(cmath.pi) - 18*MW**4*reglog(cmath.pi) - 36*cw**2*MW**4*reglog(cmath.pi) - 24*MT**2*MW**2*sw**2*reglog(cmath.pi) + 24*MW**4*sw**2*reglog(cmath.pi) + 8*MT**2*MW**2*sw**4*reglog(cmath.pi) - 8*MW**4*sw**4*reglog(cmath.pi) + 18*cw**2*MT**4*CKM32*complexconjugate(CKM32)*reglog(cmath.pi) - 18*cw**2*MT**2*MW**2*CKM32*complexconjugate(CKM32)*reglog(cmath.pi) - 18*MT**2*MW**2*reglog(4*cmath.pi) - 36*cw**2*MT**2*MW**2*reglog(4*cmath.pi) + 18*MW**4*reglog(4*cmath.pi) + 36*cw**2*MW**4*reglog(4*cmath.pi) + 24*MT**2*MW**2*sw**2*reglog(4*cmath.pi) - 24*MW**4*sw**2*reglog(4*cmath.pi) - 8*MT**2*MW**2*sw**4*reglog(4*cmath.pi) + 8*MW**4*sw**4*reglog(4*cmath.pi) - 18*cw**2*MT**4*CKM32*complexconjugate(CKM32)*reglog(4*cmath.pi) + 18*cw**2*MT**2*MW**2*CKM32*complexconjugate(CKM32)*reglog(4*cmath.pi)))/(1152.*cw**2*(MT - MW)*MW**2*(MT + MW)*cmath.pi**2*sw**2) - (ee**2*MT**4*(MT**2 + 2*MW**2)*CKM32*complexconjugate(CKM32)*reglog(MU_R**2/MT**2))/(64.*(MT - MW)**2*MW**2*(MT + MW)**2*cmath.pi**2*sw**2) + (ee**2*(-2*MT**4 + 4*MT**2*MW**2 - 2*MW**4 + 4*MT**4*CKM32*complexconjugate(CKM32) - MT**2*MW**2*CKM32*complexconjugate(CKM32))*reglog(MU_R**2/MW**2))/(64.*(MT - MW)**2*(MT + MW)**2*cmath.pi**2*sw**2) - (ee**2*(-3 + 2*sw**2)**2*reglog(MU_R**2/MZ**2))/(576.*cw**2*cmath.pi**2*sw**2)'},
                            texname = '\delta ZL_s^{EW}')


dWcft_UV_EW_L = CTParameter(name = 'dWcft_UV_EW_L',
                            type = 'complex',
                            value = {-1:'-(ee**2*(MW**2*(18*cw**2 + (3 - 2*sw**2)**2) + 9*cw**2*MT**2*CKM31*complexconjugate(CKM31)))/(576.*cw**2*MW**2*cmath.pi**2*sw**2)',
                                      0:'-(ee**2*(-9*MT**2*MW**2 - 18*cw**2*MT**2*MW**2 + 9*MW**4 + 18*cw**2*MW**4 + 12*MT**2*MW**2*sw**2 - 12*MW**4*sw**2 - 4*MT**2*MW**2*sw**4 + 4*MW**4*sw**4 + 27*cw**2*MT**4*CKM31*complexconjugate(CKM31) + 27*cw**2*MT**2*MW**2*CKM31*complexconjugate(CKM31) + 9*MT**2*MW**2*reglog(16) + 18*cw**2*MT**2*MW**2*reglog(16) - 9*MW**4*reglog(16) - 18*cw**2*MW**4*reglog(16) - 12*MT**2*MW**2*sw**2*reglog(16) + 12*MW**4*sw**2*reglog(16) + 4*MT**2*MW**2*sw**4*reglog(16) - 4*MW**4*sw**4*reglog(16) + 9*cw**2*MT**4*CKM31*complexconjugate(CKM31)*reglog(16) - 9*cw**2*MT**2*MW**2*CKM31*complexconjugate(CKM31)*reglog(16) + 18*MT**2*MW**2*reglog(cmath.pi) + 36*cw**2*MT**2*MW**2*reglog(cmath.pi) - 18*MW**4*reglog(cmath.pi) - 36*cw**2*MW**4*reglog(cmath.pi) - 24*MT**2*MW**2*sw**2*reglog(cmath.pi) + 24*MW**4*sw**2*reglog(cmath.pi) + 8*MT**2*MW**2*sw**4*reglog(cmath.pi) - 8*MW**4*sw**4*reglog(cmath.pi) + 18*cw**2*MT**4*CKM31*complexconjugate(CKM31)*reglog(cmath.pi) - 18*cw**2*MT**2*MW**2*CKM31*complexconjugate(CKM31)*reglog(cmath.pi) - 18*MT**2*MW**2*reglog(4*cmath.pi) - 36*cw**2*MT**2*MW**2*reglog(4*cmath.pi) + 18*MW**4*reglog(4*cmath.pi) + 36*cw**2*MW**4*reglog(4*cmath.pi) + 24*MT**2*MW**2*sw**2*reglog(4*cmath.pi) - 24*MW**4*sw**2*reglog(4*cmath.pi) - 8*MT**2*MW**2*sw**4*reglog(4*cmath.pi) + 8*MW**4*sw**4*reglog(4*cmath.pi) - 18*cw**2*MT**4*CKM31*complexconjugate(CKM31)*reglog(4*cmath.pi) + 18*cw**2*MT**2*MW**2*CKM31*complexconjugate(CKM31)*reglog(4*cmath.pi)))/(1152.*cw**2*(MT - MW)*MW**2*(MT + MW)*cmath.pi**2*sw**2) - (ee**2*MT**4*(MT**2 + 2*MW**2)*CKM31*complexconjugate(CKM31)*reglog(MU_R**2/MT**2))/(64.*(MT - MW)**2*MW**2*(MT + MW)**2*cmath.pi**2*sw**2) + (ee**2*(-2*MT**4 + 4*MT**2*MW**2 - 2*MW**4 + 4*MT**4*CKM31*complexconjugate(CKM31) - MT**2*MW**2*CKM31*complexconjugate(CKM31))*reglog(MU_R**2/MW**2))/(64.*(MT - MW)**2*(MT + MW)**2*cmath.pi**2*sw**2) - (ee**2*(-3 + 2*sw**2)**2*reglog(MU_R**2/MZ**2))/(576.*cw**2*cmath.pi**2*sw**2)'},
                            texname = '\delta ZL_d^{EW}')


tauWcft_UV_EW_L = CTParameter(name = 'tauWcft_UV_EW_L',
                              type = 'complex',
                              value = {-1:'-(ee**2*(2*cw**2 + (1 - 2*sw**2)**2))/(64.*cw**2*cmath.pi**2*sw**2)',
                                        0:'-(ee**2*(-1 - 2*cw**2 + 4*sw**2 - 4*sw**4 + 4*cw**2*reglog(MU_R**2/MW**2) + 2*(1 - 2*sw**2)**2*reglog(MU_R**2/MZ**2)))/(128.*cw**2*cmath.pi**2*sw**2)'},
                              texname = '\delta ZL_tau^{EW}')


muWcft_UV_EW_L = CTParameter(name = 'muWcft_UV_EW_L',
                             type = 'complex',
                             value = {-1:'-(ee**2*(2*cw**2 + (1 - 2*sw**2)**2))/(64.*cw**2*cmath.pi**2*sw**2)',
                                       0:'-(ee**2*(-1 - 2*cw**2 + 4*sw**2 - 4*sw**4 + 4*cw**2*reglog(MU_R**2/MW**2) + 2*(1 - 2*sw**2)**2*reglog(MU_R**2/MZ**2)))/(128.*cw**2*cmath.pi**2*sw**2)'},
                             texname = '\delta ZL_mu^{EW}')


eWcft_UV_EW_L = CTParameter(name = 'eWcft_UV_EW_L',
                            type = 'complex',
                            value = {-1:'-(ee**2*(2*cw**2 + (1 - 2*sw**2)**2))/(64.*cw**2*cmath.pi**2*sw**2)',
                                      0:'-(ee**2*(-1 - 2*cw**2 + 4*sw**2 - 4*sw**4 + 4*cw**2*reglog(MU_R**2/MW**2) + 2*(1 - 2*sw**2)**2*reglog(MU_R**2/MZ**2)))/(128.*cw**2*cmath.pi**2*sw**2)'},
                            texname = '\delta ZL_e^{EW}')


vtWcft_UV_EW_L = CTParameter(name = 'vtWcft_UV_EW_L',
                             type = 'complex',
                             value = {-1:'-((1 + 2*cw**2)*ee**2)/(64.*cw**2*cmath.pi**2*sw**2)',
                                       0:'-(ee**2*(-1 - 2*cw**2 + 4*cw**2*reglog(MU_R**2/MW**2) + 2*reglog(MU_R**2/MZ**2)))/(128.*cw**2*cmath.pi**2*sw**2)'},
                             texname = '\delta ZL_vt^{EW}')


vmWcft_UV_EW_L = CTParameter(name = 'vmWcft_UV_EW_L',
                             type = 'complex',
                             value = {-1:'-((1 + 2*cw**2)*ee**2)/(64.*cw**2*cmath.pi**2*sw**2)',
                                       0:'-(ee**2*(-1 - 2*cw**2 + 4*cw**2*reglog(MU_R**2/MW**2) + 2*reglog(MU_R**2/MZ**2)))/(128.*cw**2*cmath.pi**2*sw**2)'},
                             texname = '\delta ZL_vm^{EW}')


veWcft_UV_EW_L = CTParameter(name = 'veWcft_UV_EW_L',
                             type = 'complex',
                             value = {-1:'-((1 + 2*cw**2)*ee**2)/(64.*cw**2*cmath.pi**2*sw**2)',
                                       0:'-(ee**2*(-1 - 2*cw**2 + 4*cw**2*reglog(MU_R**2/MW**2) + 2*reglog(MU_R**2/MZ**2)))/(128.*cw**2*cmath.pi**2*sw**2)'},
                             texname = '\delta ZL_ve^{EW}')


HWcft_UV_EW = CTParameter(name = 'HWcft_UV_EW',
                          type = 'complex',
                          value = {-1:'(ee**2*((1 + 2*cw**2)*MW**2 - cw**2*MT**2*Ncol))/(32.*cw**2*MW**2*cmath.pi**2*sw**2)',
                                    0:'(ee**2*((2*MT**2*(MH**2 + 2*MT**2)*cmath.sqrt(-MH**2 + 4*MT**2)*Ncol*arg(-MH**2 + 2*MT**2 + MH*cmath.sqrt(-MH**2 + 4*MT**2)*complex(0,1)))/(MH**3*MW**2) + (2*(MH**2 - 6*MW**2)*(MH**2 + 2*MW**2)*arg(-MH**2 + 2*MW**2 + MH*cmath.sqrt(-MH**2 + 4*MW**2)*complex(0,1)))/(MH**3*cmath.sqrt(-MH**2 + 4*MW**2)) - ((cw**4*MH**4*MZ**2 + 16*MW**4*MZ**2 - 2*cw**2*MW**2*(MH**4 - 2*MH**2*MZ**2 + 2*MZ**4))*arg(-MH**2 + 2*MZ**2 + MH*cmath.sqrt(-MH**2 + 4*MZ**2)*complex(0,1)))/(cw**4*MH**3*MW**2*cmath.sqrt(-MH**2 + 4*MZ**2)) + (4*MT**2*Ncol*reglog(MT))/MW**2 - 8*reglog(MW) - (4*reglog(MZ))/cw**2 + 2*(-2 - cw**(-2) + (MT**2*Ncol)/MW**2)*reglog(4*cmath.pi) + (8*MW**4 + 2*cw**2*MW**2*(-MZ**2 + MH**2*(1 + reglog(4*cmath.pi))) + cw**4*(12*MW**4 + MH**4*(6 - cmath.sqrt(3)*cmath.pi) - 8*MT**4*Ncol + 2*MH**2*(2*MW**2 - MT**2*Ncol)*(1 + reglog(4*cmath.pi))))/(cw**4*MH**2*MW**2) - 4*(-2 - cw**(-2) + (MT**2*Ncol)/MW**2)*reglog(MU_R)))/(64.*cmath.pi**2*sw**2)'},
                          texname = '\delta Z_{H}^{EW}')


G0Wcft_UV_EW = CTParameter(name = 'G0Wcft_UV_EW',
                           type = 'complex',
                           value = {-1:'(ee**2*((1 + 2*cw**2)*MW**2 - cw**2*MT**2*Ncol))/(32.*cw**2*MW**2*cmath.pi**2*sw**2)',
                                     0:'(ee**2*((4*MT**2*(2*MT**2 - MZ**2)*Ncol*arg(2*MT**2 - MZ**2 + MZ*cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)))/(MW**2*MZ*cmath.sqrt(4*MT**2 - MZ**2)) + (8*(-2*MW**2 + MZ**2)*arg(2*MW**2 - MZ**2 + MZ*cmath.sqrt(4*MW**2 - MZ**2)*complex(0,1)))/(MZ*cmath.sqrt(4*MW**2 - MZ**2)) + (MH*(cw**2*(MH**6 - 3*MH**4*MZ**2) + MW**2*(-2*MH**4 + 7*MH**2*MZ**2 - 5*MZ**4))*arg(-MH + cmath.sqrt(-MH**2 + 4*MZ**2)*complex(0,1)))/(cw**2*MW**2*MZ**4*cmath.sqrt(-MH**2 + 4*MZ**2)) - (MH*(cw**2*(MH**6 - 3*MH**4*MZ**2) + MW**2*(-2*MH**4 + 7*MH**2*MZ**2 - 5*MZ**4))*arg(MH + cmath.sqrt(-MH**2 + 4*MZ**2)*complex(0,1)))/(cw**2*MW**2*MZ**4*cmath.sqrt(-MH**2 + 4*MZ**2)) + (MH*(cw**2*(MH**6 - 3*MH**4*MZ**2) + MW**2*(-2*MH**4 + 7*MH**2*MZ**2 - 5*MZ**4))*arg(MH**2 - 2*MZ**2 + MH*cmath.sqrt(-MH**2 + 4*MZ**2)*complex(0,1)))/(cw**2*MW**2*MZ**4*cmath.sqrt(-MH**2 + 4*MZ**2)) - (MH*(cw**2*(MH**6 - 3*MH**4*MZ**2) + MW**2*(-2*MH**4 + 7*MH**2*MZ**2 - 5*MZ**4))*arg(-MH**2 + 2*MZ**2 + MH*cmath.sqrt(-MH**2 + 4*MZ**2)*complex(0,1)))/(cw**2*MW**2*MZ**4*cmath.sqrt(-MH**2 + 4*MZ**2)) + (4*(MH**2 - 2*MZ**2)*(cw**2*MH**4 - MW**2*(2*MH**2 + MZ**2))*reglog(MH))/(cw**2*MW**2*MZ**2*(MH**2 - 4*MZ**2)) + (8*MT**2*Ncol*reglog(MT))/MW**2 - 16*reglog(MW) + (4*(cw**2*MH**4 + MW**2*(-2*MH**2 + MZ**2))*reglog(MZ))/(cw**2*MW**2*MZ**2) - (MH**2*(cw**2*(MH**6 - 3*MH**4*MZ**2) + MW**2*(-2*MH**4 + 7*MH**2*MZ**2 - 5*MZ**4))*reglog(4*MH**2*MZ**2))/(cw**2*MW**2*MZ**4*(MH**2 - 4*MZ**2)) + ((MH**2 - 2*MZ**2)*(cw**2*(MH**6 - 3*MH**4*MZ**2) + MW**2*(-2*MH**4 + 7*MH**2*MZ**2 - 5*MZ**4))*reglog(4*MZ**4))/(cw**2*MW**2*MZ**4*(MH**2 - 4*MZ**2)) + 4*(-2 - cw**(-2) + (MT**2*Ncol)/MW**2)*reglog(4*cmath.pi) + (2*(MW**2*(MH**4*(2 + reglog(16)) - MH**2*MZ**2*(11 + 18*reglog(2) + 2*reglog(cmath.pi)) + 2*MZ**4*(6 + reglog(8192) + 4*reglog(cmath.pi))) - cw**2*(MH**6*(1 + reglog(4)) - 2*MH**4*MZ**2*(2 + reglog(8)) + 2*MH**2*MZ**2*(2*MW**2 - MT**2*Ncol)*(1 + reglog(4*cmath.pi)) - 8*MZ**4*(2*MW**2 - MT**2*Ncol)*(1 + reglog(4*cmath.pi)))))/(cw**2*MW**2*MZ**2*(-MH**2 + 4*MZ**2)) + 8*(2 + cw**(-2) - (MT**2*Ncol)/MW**2)*reglog(MU_R)))/(128.*cmath.pi**2*sw**2)'},
                           texname = '\delta Z_{G0}^{EW}')


GpWcft_UV_EW = CTParameter(name = 'GpWcft_UV_EW',
                           type = 'complex',
                           value = {-1:'(ee**2*(cw**4*MW**2 + MW**2*sw**4 + cw**2*(-(MT**2*Ncol) + 2*MW**2*(1 + sw**2))))/(32.*cw**2*MW**2*cmath.pi**2*sw**2)',
                                     0:'-(ee**2*(cw**4*MW**2 + MW**2*sw**4 + cw**2*(-(MT**2*Ncol) + 2*MW**2*(1 + sw**2)))*reglog(4*cmath.pi))/(32.*cw**2*MW**2*cmath.pi**2*sw**2) + (ee**2*((MH*(MH**6 - 5*MH**4*MW**2 + 7*MH**2*MW**4 - 5*MW**6)*arg(-MH + cmath.sqrt(-MH**2 + 4*MW**2)*complex(0,1)))/cmath.sqrt(-MH**2 + 4*MW**2) - (MH*(MH**6 - 5*MH**4*MW**2 + 7*MH**2*MW**4 - 5*MW**6)*arg(MH + cmath.sqrt(-MH**2 + 4*MW**2)*complex(0,1)))/cmath.sqrt(-MH**2 + 4*MW**2) + (MH*(MH**6 - 5*MH**4*MW**2 + 7*MH**2*MW**4 - 5*MW**6)*arg(MH**2 - 2*MW**2 + MH*cmath.sqrt(-MH**2 + 4*MW**2)*complex(0,1)))/cmath.sqrt(-MH**2 + 4*MW**2) - (MH*(MH**6 - 5*MH**4*MW**2 + 7*MH**2*MW**4 - 5*MW**6)*arg(-MH**2 + 2*MW**2 + MH*cmath.sqrt(-MH**2 + 4*MW**2)*complex(0,1)))/cmath.sqrt(-MH**2 + 4*MW**2) + (MW**2*MZ*(cw**3*(-6*MW**3*MZ + 2*MW*MZ**3) + cw**4*(4*MW**4 - 5*MW**2*MZ**2 + MZ**4) + 2*cw*MW*MZ*(3*MW**2 - MZ**2)*sw**2 + (-44*MW**4 + 11*MW**2*MZ**2 + MZ**4)*sw**4 - cw**2*(MW**2 - MZ**2)*(-2*MZ**2*(1 + sw**2) + MW**2*(5 + 8*sw**2)))*arg(-MZ + cmath.sqrt(4*MW**2 - MZ**2)*complex(0,1)))/(cw**2*cmath.sqrt(4*MW**2 - MZ**2)) - (MW**2*MZ*(cw**3*(-6*MW**3*MZ + 2*MW*MZ**3) + cw**4*(4*MW**4 - 5*MW**2*MZ**2 + MZ**4) + 2*cw*MW*MZ*(3*MW**2 - MZ**2)*sw**2 + (-44*MW**4 + 11*MW**2*MZ**2 + MZ**4)*sw**4 - cw**2*(MW**2 - MZ**2)*(-2*MZ**2*(1 + sw**2) + MW**2*(5 + 8*sw**2)))*arg(MZ + cmath.sqrt(4*MW**2 - MZ**2)*complex(0,1)))/(cw**2*cmath.sqrt(4*MW**2 - MZ**2)) - (MW**2*MZ*(cw**3*(-6*MW**3*MZ + 2*MW*MZ**3) + cw**4*(4*MW**4 - 5*MW**2*MZ**2 + MZ**4) + 2*cw*MW*MZ*(3*MW**2 - MZ**2)*sw**2 + (-44*MW**4 + 11*MW**2*MZ**2 + MZ**4)*sw**4 - cw**2*(MW**2 - MZ**2)*(-2*MZ**2*(1 + sw**2) + MW**2*(5 + 8*sw**2)))*arg(2*MW**2 - MZ**2 + MZ*cmath.sqrt(4*MW**2 - MZ**2)*complex(0,1)))/(cw**2*cmath.sqrt(4*MW**2 - MZ**2)) + (MW**2*MZ*(cw**3*(-6*MW**3*MZ + 2*MW*MZ**3) + cw**4*(4*MW**4 - 5*MW**2*MZ**2 + MZ**4) + 2*cw*MW*MZ*(3*MW**2 - MZ**2)*sw**2 + (-44*MW**4 + 11*MW**2*MZ**2 + MZ**4)*sw**4 - cw**2*(MW**2 - MZ**2)*(-2*MZ**2*(1 + sw**2) + MW**2*(5 + 8*sw**2)))*arg(-2*MW**2 + MZ**2 + MZ*cmath.sqrt(4*MW**2 - MZ**2)*complex(0,1)))/(cw**2*cmath.sqrt(4*MW**2 - MZ**2)) + (4*MW**2*(MH**2 - 2*MW**2)*(MH**4 - 2*MH**2*MW**2 - MW**4)*reglog(MH))/(MH**2 - 4*MW**2) + 8*MT**6*Ncol*reglog(MT) - 4*MT**2*(MT - MW)*(MT + MW)*(MT**2 + MW**2)*Ncol*reglog(MT - MW) - (4*MW**2*(-2*cw**3*MW**3*MZ + cw**4*(2*MW**4 - MW**2*MZ**2) + 2*cw*MW**3*MZ*sw**2 - MW**2*(14*MW**2 + MZ**2)*sw**4 + cw**2*(-MH**4 + 2*MH**2*MW**2 + 2*MW**2*(MZ**2*(1 + sw**2) + MW**2*(-1 + 2*sw**2))))*reglog(MW))/cw**2 - (MH**2*(MH**6 - 5*MH**4*MW**2 + 7*MH**2*MW**4 - 5*MW**6)*reglog(4*MH**2*MW**2))/(MH**2 - 4*MW**2) + ((MH**2 - 2*MW**2)*(MH**6 - 5*MH**4*MW**2 + 7*MH**2*MW**4 - 5*MW**6)*reglog(4*MW**4))/(MH**2 - 4*MW**2) + (MW**2*(2*MW**2 - MZ**2)*(cw**3*(-6*MW**3*MZ + 2*MW*MZ**3) + cw**4*(4*MW**4 - 5*MW**2*MZ**2 + MZ**4) + 2*cw*MW*MZ*(3*MW**2 - MZ**2)*sw**2 + (-44*MW**4 + 11*MW**2*MZ**2 + MZ**4)*sw**4 - cw**2*(MW**2 - MZ**2)*(-2*MZ**2*(1 + sw**2) + MW**2*(5 + 8*sw**2)))*reglog(4*MW**4))/(cw**2*(4*MW**2 - MZ**2)) + 4*MT**2*(-MT**4 + MW**4)*Ncol*reglog(MT + MW) - (4*MW**4*(2*MW**2 - MZ**2)*(-2*cw**3*MW*MZ + cw**4*(4*MW**2 - MZ**2) + 2*cw*MW*MZ*sw**2 - (12*MW**2 + MZ**2)*sw**4 + cw**2*(MW**2*(1 - 8*sw**2) + 2*MZ**2*(1 + sw**2)))*reglog(MZ))/(cw**2*(4*MW**2 - MZ**2)) + (MW**2*MZ**2*(cw**3*(-6*MW**3*MZ + 2*MW*MZ**3) + cw**4*(4*MW**4 - 5*MW**2*MZ**2 + MZ**4) + 2*cw*MW*MZ*(3*MW**2 - MZ**2)*sw**2 + (-44*MW**4 + 11*MW**2*MZ**2 + MZ**4)*sw**4 - cw**2*(MW**2 - MZ**2)*(-2*MZ**2*(1 + sw**2) + MW**2*(5 + 8*sw**2)))*reglog(4*MW**2*MZ**2))/(cw**2*(4*MW**2 - MZ**2)) + (2*MW**2*(2*cw**3*MW**3*(MH**2 - 4*MW**2)*MZ*(-(MZ**2*(1 + reglog(4))) + MW**2*(4 + reglog(64))) - 2*cw*MW**3*(MH**2 - 4*MW**2)*MZ*sw**2*(-(MZ**2*(1 + reglog(4))) + MW**2*(4 + reglog(64))) + cw**4*MW**2*(-MH**2 + 4*MW**2)*(4*MW**2 - MZ**2)*(-(MZ**2*(1 + reglog(4))) - MW**2*(reglog(4) + 2*reglog(cmath.pi))) + cw**2*(MH**6*(4*MW**2 - MZ**2)*(1 + reglog(4)) - 2*MH**4*MW**2*(4*MW**2 - MZ**2)*(3 + reglog(32)) - 2*MH**2*(-(MT**4*MZ**2*Ncol) - MW**2*(-4*MT**4*Ncol + MZ**4*(1 + sw**2)*(1 + reglog(4)) + MT**2*MZ**2*Ncol*(1 + reglog(4*cmath.pi))) + MW**6*(-28 - 49*reglog(2) - 8*reglog(cmath.pi) - 8*sw**2*(3 + reglog(8*cmath.pi))) + MW**4*(4*MT**2*Ncol*(1 + reglog(4*cmath.pi)) + MZ**2*(11 + 18*reglog(2) + 2*reglog(cmath.pi) + 2*sw**2*(5 + reglog(128*cmath.pi))))) + 2*(-4*MT**4*MW**2*MZ**2*Ncol - 4*MW**4*(-4*MT**4*Ncol + MZ**4*(1 + sw**2)*(1 + reglog(4)) + MT**2*MZ**2*Ncol*(1 + reglog(4*cmath.pi))) + 8*MW**8*(-6 - 13*reglog(2) - 4*reglog(cmath.pi) - 4*sw**2*(3 + reglog(8*cmath.pi))) + MW**6*(16*MT**2*Ncol*(1 + reglog(4*cmath.pi)) + MZ**2*(28 + 49*reglog(2) + 8*reglog(cmath.pi) + 8*sw**2*(5 + reglog(128*cmath.pi)))))) - MW**2*(MH**2 - 4*MW**2)*sw**4*(MZ**4*(1 + reglog(4)) + 8*MW**4*(-8 - 13*reglog(2) - reglog(cmath.pi)) + 2*MW**2*MZ**2*(6 + reglog(8192*cmath.pi)))))/(cw**2*(MH**2 - 4*MW**2)*(4*MW**2 - MZ**2)) + (8*MW**4*(cw**4*MW**2 + MW**2*sw**4 + cw**2*(-(MT**2*Ncol) + 2*MW**2*(1 + sw**2)))*reglog(MU_R))/cw**2))/(128.*MW**6*cmath.pi**2*sw**2)'},
                           texname = '\delta Z_{Gp}^{EW}')


WWcft_UV_EW = CTParameter(name = 'WWcft_UV_EW',
                          type = 'complex',
                          value = {-1:'(ee**2*(-7 + 20*cw**2 - 6*Ncol + 8*sw**2))/(96.*cmath.pi**2*sw**2)',
                                    0:'-(ee**2*(-7 + 20*cw**2 - 6*Ncol + 8*sw**2)*reglog(4*cmath.pi))/(96.*cmath.pi**2*sw**2) - (ee**2*((-3*MH*(2*MH**6 - 13*MH**4*MW**2 + 32*MH**2*MW**4 - 36*MW**6)*arg(-MH + cmath.sqrt(-MH**2 + 4*MW**2)*complex(0,1)))/(MW**6*cmath.sqrt(-MH**2 + 4*MW**2)) + (3*MH*(2*MH**6 - 13*MH**4*MW**2 + 32*MH**2*MW**4 - 36*MW**6)*arg(MH + cmath.sqrt(-MH**2 + 4*MW**2)*complex(0,1)))/(MW**6*cmath.sqrt(-MH**2 + 4*MW**2)) - (3*MH*(2*MH**6 - 13*MH**4*MW**2 + 32*MH**2*MW**4 - 36*MW**6)*arg(MH**2 - 2*MW**2 + MH*cmath.sqrt(-MH**2 + 4*MW**2)*complex(0,1)))/(MW**6*cmath.sqrt(-MH**2 + 4*MW**2)) + (3*MH*(2*MH**6 - 13*MH**4*MW**2 + 32*MH**2*MW**4 - 36*MW**6)*arg(-MH**2 + 2*MW**2 + MH*cmath.sqrt(-MH**2 + 4*MW**2)*complex(0,1)))/(MW**6*cmath.sqrt(-MH**2 + 4*MW**2)) - (3*MZ*(-4*cw**4*(3*MW**6 - 46*MW**4*MZ**2 + 29*MW**2*MZ**4 - 4*MZ**6) + cw**2*(20*MW**4*MZ**2 - 13*MW**2*MZ**4 + 2*MZ**6) + 12*MW**4*(-3*MW**2 + MZ**2)*sw**4)*arg(-MZ + cmath.sqrt(4*MW**2 - MZ**2)*complex(0,1)))/(cw**2*MW**6*cmath.sqrt(4*MW**2 - MZ**2)) + (3*MZ*(-4*cw**4*(3*MW**6 - 46*MW**4*MZ**2 + 29*MW**2*MZ**4 - 4*MZ**6) + cw**2*(20*MW**4*MZ**2 - 13*MW**2*MZ**4 + 2*MZ**6) + 12*MW**4*(-3*MW**2 + MZ**2)*sw**4)*arg(MZ + cmath.sqrt(4*MW**2 - MZ**2)*complex(0,1)))/(cw**2*MW**6*cmath.sqrt(4*MW**2 - MZ**2)) + (3*MZ*(-4*cw**4*(3*MW**6 - 46*MW**4*MZ**2 + 29*MW**2*MZ**4 - 4*MZ**6) + cw**2*(20*MW**4*MZ**2 - 13*MW**2*MZ**4 + 2*MZ**6) + 12*MW**4*(-3*MW**2 + MZ**2)*sw**4)*arg(2*MW**2 - MZ**2 + MZ*cmath.sqrt(4*MW**2 - MZ**2)*complex(0,1)))/(cw**2*MW**6*cmath.sqrt(4*MW**2 - MZ**2)) - (3*MZ*(-4*cw**4*(3*MW**6 - 46*MW**4*MZ**2 + 29*MW**2*MZ**4 - 4*MZ**6) + cw**2*(20*MW**4*MZ**2 - 13*MW**2*MZ**4 + 2*MZ**6) + 12*MW**4*(-3*MW**2 + MZ**2)*sw**4)*arg(-2*MW**2 + MZ**2 + MZ*cmath.sqrt(4*MW**2 - MZ**2)*complex(0,1)))/(cw**2*MW**6*cmath.sqrt(4*MW**2 - MZ**2)) + (12*(-2*MH**6 + 11*MH**4*MW**2 - 24*MH**2*MW**4 + 24*MW**6)*reglog(MH))/(MW**4*(MH**2 - 4*MW**2)) - (48*MT**6*Ncol*reglog(MT))/MW**6 + (24*(MT**6 - MW**6)*Ncol*reglog(MT - MW))/MW**6 + (12*(4*cw**4*(MW**4 + 17*MW**2*MZ**2 - 4*MZ**4) - 12*MW**4*sw**4 + cw**2*(-2*MH**4 + 7*MH**2*MW**2 + 7*MW**2*MZ**2 - 2*MZ**4 - 2*MW**4*(13 + 4*Ncol - 8*sw**2)))*reglog(MW))/(cw**2*MW**4) + (3*MH**2*(2*MH**6 - 13*MH**4*MW**2 + 32*MH**2*MW**4 - 36*MW**6)*reglog(4*MH**2*MW**2))/(MW**6*(MH**2 - 4*MW**2)) - (3*(MH**2 - 2*MW**2)*(2*MH**6 - 13*MH**4*MW**2 + 32*MH**2*MW**4 - 36*MW**6)*reglog(4*MW**4))/(MW**6*(MH**2 - 4*MW**2)) + (3*(2*MW**2 - MZ**2)*(4*cw**4*(3*MW**6 - 46*MW**4*MZ**2 + 29*MW**2*MZ**4 - 4*MZ**6) + cw**2*(-20*MW**4*MZ**2 + 13*MW**2*MZ**4 - 2*MZ**6) + 12*MW**4*(3*MW**2 - MZ**2)*sw**4)*reglog(4*MW**4))/(cw**2*MW**6*(4*MW**2 - MZ**2)) + (24*(MT**6 - MW**6)*Ncol*reglog(MT + MW))/MW**6 + (12*(cw**2*(12*MW**4*MZ**2 - 11*MW**2*MZ**4 + 2*MZ**6) + 4*cw**4*(30*MW**6 + 15*MW**4*MZ**2 - 25*MW**2*MZ**4 + 4*MZ**6) + 12*MW**4*(-2*MW**2 + MZ**2)*sw**4)*reglog(MZ))/(cw**2*MW**4*(4*MW**2 - MZ**2)) - (3*MZ**2*(-4*cw**4*(3*MW**6 - 46*MW**4*MZ**2 + 29*MW**2*MZ**4 - 4*MZ**6) + cw**2*(20*MW**4*MZ**2 - 13*MW**2*MZ**4 + 2*MZ**6) + 12*MW**4*(-3*MW**2 + MZ**2)*sw**4)*reglog(4*MW**2*MZ**2))/(cw**2*MW**6*(4*MW**2 - MZ**2)) - (4*(18*MW**4*(MH**2 - 4*MW**2)*sw**4*(-(MZ**2*(1 + reglog(4))) + MW**2*(4 + reglog(64))) - 2*cw**4*(MH**2 - 4*MW**2)*(-3*MW**2*MZ**4*(31 + 58*reglog(2)) + 12*MZ**6*(1 + reglog(4)) + 2*MW**6*(-46 - 129*reglog(2) - 60*reglog(cmath.pi)) + MW**4*MZ**2*(203 + 336*reglog(2) + 30*reglog(cmath.pi))) + cw**2*(4*MW**2 - MZ**2)*(MH**6*(3 + reglog(64)) - 3*MH**4*MW**2*(7 + reglog(8192)) - 4*MW**2*(3*MZ**4 - 6*MT**4*Ncol - 3*MW**2*(MT**2*Ncol + MZ**2*(3 + reglog(32))) + MZ**4*reglog(64) + MW**4*(1 + 64*sw**2 - 15*reglog(2) + 48*sw**2*reglog(2) - 21*reglog(cmath.pi) + 24*sw**2*reglog(cmath.pi) - 6*Ncol*(2 + reglog(64) + 3*reglog(cmath.pi)))) + MH**2*(3*MZ**4 - 6*MT**4*Ncol - 3*MW**2*(MT**2*Ncol + MZ**2*(3 + reglog(32))) + MZ**4*reglog(64) + MW**4*(37 + 64*sw**2 + 54*reglog(2) + 48*sw**2*reglog(2) - 21*reglog(cmath.pi) + 24*sw**2*reglog(cmath.pi) - 6*Ncol*(2 + reglog(64) + 3*reglog(cmath.pi)))))))/(cw**2*MW**4*(MH**2 - 4*MW**2)*(4*MW**2 - MZ**2)) - 24*(-7 + 20*cw**2 - 6*Ncol + 8*sw**2)*reglog(MU_R)))/(1152.*cmath.pi**2*sw**2)'},
                          texname = '\delta Z_{W}^{EW}')


ZZWcft_UV_EW = CTParameter(name = 'ZZWcft_UV_EW',
                           type = 'complex',
                           value = {-1:'(ee**2*(-39 + 117*cw**4 + 72*sw**2 + 6*cw**2*sw**2 - 147*sw**4 - 4*Ncol*(9 - 18*sw**2 + 20*sw**4)))/(576.*cw**2*cmath.pi**2*sw**2)',
                                     0:'-(ee**2*(-39 + 117*cw**4 + 72*sw**2 + 6*cw**2*sw**2 - 147*sw**4 - 4*Ncol*(9 - 18*sw**2 + 20*sw**4))*reglog(4*cmath.pi))/(576.*cw**2*cmath.pi**2*sw**2) - (ee**2*((4*cw**2*Ncol*(-2*MT**2*MZ**2*(9 - 24*sw**2 + 32*sw**4) + MZ**4*(9 - 24*sw**2 + 32*sw**4) + 2*MT**4*(-9 - 48*sw**2 + 64*sw**4))*arg(2*MT**2 - MZ**2 + MZ*cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)))/(MZ**3*cmath.sqrt(4*MT**2 - MZ**2)) - (18*cw**2*(3*cw**4*(40*MW**4 - 26*MW**2*MZ**2 + 13*MZ**4) - 2*cw**2*(8*MW**4 + 2*MW**2*MZ**2 - MZ**4)*sw**2 - (40*MW**4 - 2*MW**2*MZ**2 + MZ**4)*sw**4)*arg(2*MW**2 - MZ**2 + MZ*cmath.sqrt(4*MW**2 - MZ**2)*complex(0,1)))/(MZ**3*cmath.sqrt(4*MW**2 - MZ**2)) - (9*MH*(12*MW**2*MZ**2*(MH**2 - 3*MZ**2) + cw**2*(2*MH**6 - 13*MH**4*MZ**2 + 20*MH**2*MZ**4))*arg(-MH + cmath.sqrt(-MH**2 + 4*MZ**2)*complex(0,1)))/(MZ**6*cmath.sqrt(-MH**2 + 4*MZ**2)) + (9*MH*(12*MW**2*MZ**2*(MH**2 - 3*MZ**2) + cw**2*(2*MH**6 - 13*MH**4*MZ**2 + 20*MH**2*MZ**4))*arg(MH + cmath.sqrt(-MH**2 + 4*MZ**2)*complex(0,1)))/(MZ**6*cmath.sqrt(-MH**2 + 4*MZ**2)) - (9*MH*(12*MW**2*MZ**2*(MH**2 - 3*MZ**2) + cw**2*(2*MH**6 - 13*MH**4*MZ**2 + 20*MH**2*MZ**4))*arg(MH**2 - 2*MZ**2 + MH*cmath.sqrt(-MH**2 + 4*MZ**2)*complex(0,1)))/(MZ**6*cmath.sqrt(-MH**2 + 4*MZ**2)) + (9*MH*(12*MW**2*MZ**2*(MH**2 - 3*MZ**2) + cw**2*(2*MH**6 - 13*MH**4*MZ**2 + 20*MH**2*MZ**4))*arg(-MH**2 + 2*MZ**2 + MH*cmath.sqrt(-MH**2 + 4*MZ**2)*complex(0,1)))/(MZ**6*cmath.sqrt(-MH**2 + 4*MZ**2)) - (36*(12*MW**2*MZ**2*(MH**2 - 2*MZ**2) + cw**2*(2*MH**6 - 11*MH**4*MZ**2 + 12*MH**2*MZ**4))*reglog(MH))/(MZ**4*(MH**2 - 4*MZ**2)) - 8*cw**2*Ncol*(9 - 24*sw**2 + 32*sw**4)*reglog(MT) + 36*cw**2*(39*cw**4 + 2*cw**2*sw**2 - sw**4)*reglog(MW) - (4*(108*MW**2*MZ**2 + cw**2*(18*MH**4 - 63*MH**2*MZ**2 + MZ**4*(9*(13 - 24*sw**2 + 48*sw**4) + 2*Ncol*(45 - 84*sw**2 + 88*sw**4))))*reglog(MZ))/MZ**4 + (9*MH**2*(12*MW**2*MZ**2*(MH**2 - 3*MZ**2) + cw**2*(2*MH**6 - 13*MH**4*MZ**2 + 20*MH**2*MZ**4))*reglog(4*MH**2*MZ**2))/(MZ**6*(MH**2 - 4*MZ**2)) + (9*(MH**2 - 2*MZ**2)*(12*MW**2*MZ**2*(MH**2 - 3*MZ**2) + cw**2*(2*MH**6 - 13*MH**4*MZ**2 + 20*MH**2*MZ**4))*reglog(4*MZ**4))/(-(MH**2*MZ**6) + 4*MZ**8) + (2*(108*MW**2*MZ**2*(MH**2*(1 + reglog(4)) - 2*MZ**2*(2 + reglog(8))) - 9*cw**6*MZ**2*(MH**2 - 4*MZ**2)*(60*MW**2 + MZ**2*(-41 - 78*reglog(2) - 39*reglog(cmath.pi))) + 6*cw**4*MZ**2*(MH**2 - 4*MZ**2)*sw**2*(12*MW**2 + MZ**2*(5 + reglog(64) + 3*reglog(cmath.pi))) + cw**2*(MH**2 - 4*MZ**2)*(18*MH**4*(1 + reglog(4)) - 18*MH**2*MZ**2*(3 + reglog(32)) + MZ**2*(2*(90*MW**2*sw**4 + MT**2*Ncol*(-9 - 48*sw**2 + 64*sw**4)) + MZ**2*(-4*Ncol*(9 - 18*sw**2 + 20*sw**4)*(2 + reglog(64) + 3*reglog(cmath.pi)) - 3*(29 + 78*reglog(2) + 39*reglog(cmath.pi) - 24*sw**2*(2 + reglog(64) + 3*reglog(cmath.pi)) + sw**4*(101 + 294*reglog(2) + 147*reglog(cmath.pi))))))))/(-(MH**2*MZ**4) + 4*MZ**6) - 12*cw**2*(-39 + 117*cw**4 + 72*sw**2 + 6*cw**2*sw**2 - 147*sw**4 - 4*Ncol*(9 - 18*sw**2 + 20*sw**4))*reglog(MU_R)))/(3456.*cw**4*cmath.pi**2*sw**2)'},
                           texname = '\delta Z_{ZZ}^{EW}')


AZWcft_UV_EW = CTParameter(name = 'AZWcft_UV_EW',
                           type = 'complex',
                           value = {-1:'-(ee**2*(cw**2*(36*MW**2 + 57*MZ**2) + 36*MW**2*sw**2 + MZ**2*(-18 - 18*Ncol + 75*sw**2 + 40*Ncol*sw**2)))/(144.*cw*MZ**2*cmath.pi**2*sw)',
                                     0:'(ee**2*(4*cmath.sqrt(4*MT**2 - MZ**2)*(2*MT**2 + MZ**2)*Ncol*(-3 + 8*sw**2)*arg(2*MT**2 - MZ**2 + MZ*cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) + 9*cmath.sqrt(4*MW**2 - MZ**2)*(cw**2*(32*MW**2 + 19*MZ**2) + (8*MW**2 + MZ**2)*sw**2)*arg(2*MW**2 - MZ**2 + MZ*cmath.sqrt(4*MW**2 - MZ**2)*complex(0,1)) + 2*MZ*(-288*cw**2*MW**2 + 45*MZ**2 - 174*cw**2*MZ**2 + 24*MT**2*Ncol + 45*MZ**2*Ncol - 72*MW**2*sw**2 - 192*MZ**2*sw**2 - 64*MT**2*Ncol*sw**2 - 100*MZ**2*Ncol*sw**2 + 4*MZ**2*Ncol*(-3 + 8*sw**2)*reglog(MT) + 9*(cw**2*(12*MW**2 + 19*MZ**2) + (12*MW**2 + MZ**2)*sw**2)*reglog(MW) - 54*MZ**2*reglog(MZ) - 42*MZ**2*Ncol*reglog(MZ) + 216*MZ**2*sw**2*reglog(MZ) + 88*MZ**2*Ncol*sw**2*reglog(MZ) - 108*cw**2*MW**2*reglog(MU_R) + 54*MZ**2*reglog(MU_R) - 171*cw**2*MZ**2*reglog(MU_R) + 54*MZ**2*Ncol*reglog(MU_R) - 108*MW**2*sw**2*reglog(MU_R) - 225*MZ**2*sw**2*reglog(MU_R) - 120*MZ**2*Ncol*sw**2*reglog(MU_R))))/(432.*cw*MZ**3*cmath.pi**2*sw)'},
                           texname = '\delta Z_{AZ}^{EW}')


ZAWcft_UV_EW = CTParameter(name = 'ZAWcft_UV_EW',
                           type = 'complex',
                           value = {-1:'(ee**2*MW**2*(cw**2 + sw**2))/(4.*cw*MZ**2*cmath.pi**2*sw)',
                                     0:'-(ee**2*MW**2*(cw**2 + sw**2)*reglog(MW**2/MU_R**2))/(4.*cw*MZ**2*cmath.pi**2*sw)'},
                           texname = '\delta Z_{ZA}^{EW}')


AAWcft_UV_EW = CTParameter(name = 'AAWcft_UV_EW',
                           type = 'complex',
                           value = {-1:'(ee**2*(81 - 16*Ncol))/(432.*cmath.pi**2)',
                                     0:'(ee**2*(9 + 16*Ncol*reglog(MT/MU_R) - 81*reglog(MW/MU_R)))/(216.*cmath.pi**2)'},
                           texname = '\delta Z_{AA}^{EW}')


eCoup_UV_EW = CTParameter(name = 'eCoup_UV_EW',
                          type = 'complex',
                          value = {-1:'(ee**2*(2*cw**2*(54*MW**2 + MZ**2*(45 + 8*Ncol)) + 3*(36*MW**2*sw**2 + MZ**2*(-18 - 18*Ncol + 75*sw**2 + 40*Ncol*sw**2))))/(864.*cw**2*MZ**2*cmath.pi**2)',
                                    0:'-(ee**2*(4*cmath.sqrt(4*MT**2 - MZ**2)*(2*MT**2 + MZ**2)*Ncol*(-3 + 8*sw**2)*arg(2*MT**2 - MZ**2 + MZ*cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)) + 9*cmath.sqrt(4*MW**2 - MZ**2)*(cw**2*(32*MW**2 + 19*MZ**2) + (8*MW**2 + MZ**2)*sw**2)*arg(2*MW**2 - MZ**2 + MZ*cmath.sqrt(4*MW**2 - MZ**2)*complex(0,1)) + 2*MZ*(-288*cw**2*MW**2 + 45*MZ**2 - 165*cw**2*MZ**2 + 24*MT**2*Ncol + 45*MZ**2*Ncol - 72*MW**2*sw**2 - 192*MZ**2*sw**2 - 64*MT**2*Ncol*sw**2 - 100*MZ**2*Ncol*sw**2 + 4*MZ**2*Ncol*(-3 + 8*sw**2)*reglog(MT) + 9*(cw**2*(12*MW**2 + 19*MZ**2) + (12*MW**2 + MZ**2)*sw**2)*reglog(MW) - 54*MZ**2*reglog(MZ) - 42*MZ**2*Ncol*reglog(MZ) + 216*MZ**2*sw**2*reglog(MZ) + 88*MZ**2*Ncol*sw**2*reglog(MZ) + 16*cw**2*MZ**2*Ncol*reglog(MT/MU_R) - 81*cw**2*MZ**2*reglog(MW/MU_R) - 108*cw**2*MW**2*reglog(MU_R) + 54*MZ**2*reglog(MU_R) - 171*cw**2*MZ**2*reglog(MU_R) + 54*MZ**2*Ncol*reglog(MU_R) - 108*MW**2*sw**2*reglog(MU_R) - 225*MZ**2*sw**2*reglog(MU_R) - 120*MZ**2*Ncol*sw**2*reglog(MU_R))))/(864.*cw**2*MZ**3*cmath.pi**2)'},
                          texname = '\delta e')


SWCoup_UV_EW = CTParameter(name = 'SWCoup_UV_EW',
                           type = 'complex',
                           value = {-1:'(ee**2*(18*cw**4*MZ**2*(2*cw**2*MZ**2 + MT**2*Ncol) + MW**4*(36 - 72*cw**6 + 72*cw**2*sw**4) + cw**2*MW**2*(-18*MT**2*Ncol + MZ**2*(39 + 147*cw**4 - 72*sw**2 + 111*sw**4 - 6*cw**2*(31 + 6*Ncol - 37*sw**2) + 4*Ncol*(9 - 18*sw**2 + 20*sw**4)))))/(1152.*cw**2*MW**2*MZ**2*cmath.pi**2*sw**3)',
                                     0:'-(ee**2*(18*cw**4*MZ**2*(2*cw**2*MZ**2 + MT**2*Ncol) + MW**4*(36 - 72*cw**6 + 72*cw**2*sw**4) + cw**2*MW**2*(-18*MT**2*Ncol + MZ**2*(39 + 147*cw**4 - 72*sw**2 + 111*sw**4 - 6*cw**2*(31 + 6*Ncol - 37*sw**2) + 4*Ncol*(9 - 18*sw**2 + 20*sw**4))))*reglog(4*cmath.pi))/(1152.*cw**2*MW**2*MZ**2*cmath.pi**2*sw**3) + (cw**2*((ee**2*((-4*cw**2*cmath.sqrt(4*MT**2 - MZ**2)*Ncol*(MZ**2*(9 - 24*sw**2 + 32*sw**4) + MT**2*(-9 - 48*sw**2 + 64*sw**4))*arg(2*MT**2 - MZ**2 + MZ*cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)))/MZ + (18*cw**2*cmath.sqrt(4*MW**2 - MZ**2)*(cw**4*(60*MW**2 + 39*MZ**2) + 2*cw**2*(-4*MW**2 + MZ**2)*sw**2 - (20*MW**2 + MZ**2)*sw**4)*arg(2*MW**2 - MZ**2 + MZ*cmath.sqrt(4*MW**2 - MZ**2)*complex(0,1)))/MZ - (9*MH*cmath.sqrt(-MH**2 + 4*MZ**2)*(12*MW**2*MZ**2 + cw**2*(MH**4 - 4*MH**2*MZ**2))*arg(-MH + cmath.sqrt(-MH**2 + 4*MZ**2)*complex(0,1)))/MZ**4 + (9*MH*cmath.sqrt(-MH**2 + 4*MZ**2)*(12*MW**2*MZ**2 + cw**2*(MH**4 - 4*MH**2*MZ**2))*arg(MH + cmath.sqrt(-MH**2 + 4*MZ**2)*complex(0,1)))/MZ**4 - (9*MH*cmath.sqrt(-MH**2 + 4*MZ**2)*(12*MW**2*MZ**2 + cw**2*(MH**4 - 4*MH**2*MZ**2))*arg(MH**2 - 2*MZ**2 + MH*cmath.sqrt(-MH**2 + 4*MZ**2)*complex(0,1)))/MZ**4 + (9*MH*cmath.sqrt(-MH**2 + 4*MZ**2)*(12*MW**2*MZ**2 + cw**2*(MH**4 - 4*MH**2*MZ**2))*arg(-MH**2 + 2*MZ**2 + MH*cmath.sqrt(-MH**2 + 4*MZ**2)*complex(0,1)))/MZ**4 + (36*cw**2*MH**2*(MH**2 - 3*MZ**2)*reglog(MH))/MZ**2 + 8*cw**2*Ncol*(27*MT**2 + MZ**2*(-9 + 24*sw**2 - 32*sw**4))*reglog(MT) + 36*cw**2*(3*cw**4*(8*MW**2 + 13*MZ**2) + 2*cw**2*MZ**2*sw**2 - (24*MW**2 + MZ**2)*sw**4)*reglog(MW) + (4*(108*MW**2*MZ**2 + cw**2*(9*MH**4 - 45*MH**2*MZ**2 - MZ**4*(9*(13 - 24*sw**2 + 48*sw**4) + 2*Ncol*(45 - 84*sw**2 + 88*sw**4))))*reglog(MZ))/MZ**2 - (9*MH**2*(12*MW**2*MZ**2 + cw**2*(MH**4 - 4*MH**2*MZ**2))*reglog(4*MH**2*MZ**2))/MZ**4 + (9*(MH**2 - 2*MZ**2)*(12*MW**2*MZ**2 + cw**2*(MH**4 - 4*MH**2*MZ**2))*reglog(4*MZ**4))/MZ**4 + (2*(-108*MW**2*MZ**2*(-2 + reglog(1/(16.*cmath.pi))) + 9*cw**6*MZ**2*(24*MW**2*(-5 + reglog(1/(4.*cmath.pi))) + MZ**2*(-80 - 78*reglog(2) - 39*reglog(cmath.pi))) + 6*cw**4*MZ**2*sw**2*(24*MW**2 + MZ**2*(-8 - 6*reglog(2) - 3*reglog(cmath.pi))) + cw**2*(9*MH**4*(1 + reglog(4)) - 18*MH**2*MZ**2*(3 + reglog(16)) + MZ**2*(2*(-36*MW**2*sw**4*(-5 - 6*reglog(2) - 3*reglog(cmath.pi)) + MT**2*Ncol*(-96*sw**2 + 128*sw**4 - 9*(2 + reglog(64) + 3*reglog(cmath.pi)))) + MZ**2*(4*Ncol*(9 - 18*sw**2 + 20*sw**4)*(5 + reglog(64) + 3*reglog(cmath.pi)) + 3*(59 + 78*reglog(2) + 39*reglog(cmath.pi) - 24*sw**2*(5 + reglog(64) + 3*reglog(cmath.pi)) + sw**4*(248 + 294*reglog(2) + 147*reglog(cmath.pi))))))))/MZ**2 - 12*(36*MW**2*(-1 + 2*cw**6 - 2*cw**2*sw**4) + cw**2*(18*MT**2*Ncol + MZ**2*(-39 + 117*cw**4 + 72*sw**2 + 6*cw**2*sw**2 - 147*sw**4 - 4*Ncol*(9 - 18*sw**2 + 20*sw**4))))*reglog(MU_R)))/(3456.*cw**4*MZ**2*cmath.pi**2*sw**2) - (ee**2*(-3*MH*cmath.sqrt(-MH**2 + 4*MW**2)*(MH**4 - 4*MH**2*MW**2 + 12*MW**4)*arg(-MH + cmath.sqrt(-MH**2 + 4*MW**2)*complex(0,1)) + 3*MH*cmath.sqrt(-MH**2 + 4*MW**2)*(MH**4 - 4*MH**2*MW**2 + 12*MW**4)*arg(MH + cmath.sqrt(-MH**2 + 4*MW**2)*complex(0,1)) - 3*MH*cmath.sqrt(-MH**2 + 4*MW**2)*(MH**4 - 4*MH**2*MW**2 + 12*MW**4)*arg(MH**2 - 2*MW**2 + MH*cmath.sqrt(-MH**2 + 4*MW**2)*complex(0,1)) + 3*MH*cmath.sqrt(-MH**2 + 4*MW**2)*(MH**4 - 4*MH**2*MW**2 + 12*MW**4)*arg(-MH**2 + 2*MW**2 + MH*cmath.sqrt(-MH**2 + 4*MW**2)*complex(0,1)) - (3*MZ*cmath.sqrt(4*MW**2 - MZ**2)*(cw**2*(-4*MW**2*MZ**2 + MZ**4) + cw**4*(-60*MW**4 - 44*MW**2*MZ**2 + 8*MZ**4) + 12*MW**4*sw**4)*arg(-MZ + cmath.sqrt(4*MW**2 - MZ**2)*complex(0,1)))/cw**2 + (3*MZ*cmath.sqrt(4*MW**2 - MZ**2)*(cw**2*(-4*MW**2*MZ**2 + MZ**4) + cw**4*(-60*MW**4 - 44*MW**2*MZ**2 + 8*MZ**4) + 12*MW**4*sw**4)*arg(MZ + cmath.sqrt(4*MW**2 - MZ**2)*complex(0,1)))/cw**2 + (3*MZ*cmath.sqrt(4*MW**2 - MZ**2)*(cw**2*(-4*MW**2*MZ**2 + MZ**4) + cw**4*(-60*MW**4 - 44*MW**2*MZ**2 + 8*MZ**4) + 12*MW**4*sw**4)*arg(2*MW**2 - MZ**2 + MZ*cmath.sqrt(4*MW**2 - MZ**2)*complex(0,1)))/cw**2 - (3*MZ*cmath.sqrt(4*MW**2 - MZ**2)*(cw**2*(-4*MW**2*MZ**2 + MZ**4) + cw**4*(-60*MW**4 - 44*MW**2*MZ**2 + 8*MZ**4) + 12*MW**4*sw**4)*arg(-2*MW**2 + MZ**2 + MZ*cmath.sqrt(4*MW**2 - MZ**2)*complex(0,1)))/cw**2 + 2*(3*MH**4*MW**2 - 18*MH**2*MW**4 + 166*MW**6 - 428*cw**2*MW**6 - 18*MW**4*MZ**2 - 216*cw**2*MW**4*MZ**2 + 3*MW**2*MZ**4 + 24*cw**2*MW**2*MZ**4 - 6*MT**4*MW**2*Ncol - 12*MT**2*MW**4*Ncol + 60*MW**6*Ncol - 356*MW**6*sw**2 + (72*MW**6*sw**4)/cw**2 + 372*MW**6*reglog(2) - 528*cw**2*MW**6*reglog(2) - 72*cw**2*MW**4*MZ**2*reglog(2) - 36*MT**2*MW**4*Ncol*reglog(2) + 72*MW**6*Ncol*reglog(2) - 456*MW**6*sw**2*reglog(2) + (72*MW**6*sw**4*reglog(2))/cw**2 - 3*(MH**6 - 6*MH**4*MW**2 + 18*MH**2*MW**4)*reglog(MH) + 12*MT**6*Ncol*reglog(MT) - 6*MT**6*Ncol*reglog(MT - MW) + 18*MT**2*MW**4*Ncol*reglog(MT - MW) - 12*MW**6*Ncol*reglog(MT - MW) + 3*MH**6*reglog(MW) - 18*MH**4*MW**2*reglog(MW) + 54*MH**2*MW**4*reglog(MW) - 372*MW**6*reglog(MW) + 528*cw**2*MW**6*reglog(MW) + 18*MW**4*MZ**2*reglog(MW) + 36*cw**2*MW**4*MZ**2*reglog(MW) - 18*MW**2*MZ**4*reglog(MW) - 180*cw**2*MW**2*MZ**4*reglog(MW) + 3*MZ**6*reglog(MW) + 24*cw**2*MZ**6*reglog(MW) - 48*MW**6*Ncol*reglog(MW) + 456*MW**6*sw**2*reglog(MW) - (72*MW**6*sw**4*reglog(MW))/cw**2 + (36*MW**4*MZ**2*sw**4*reglog(MW))/cw**2 - 6*MT**6*Ncol*reglog(MT + MW) + 18*MT**2*MW**4*Ncol*reglog(MT + MW) - 12*MW**6*Ncol*reglog(MT + MW) - 18*MW**4*MZ**2*reglog(MZ) + 36*cw**2*MW**4*MZ**2*reglog(MZ) + 18*MW**2*MZ**4*reglog(MZ) + 180*cw**2*MW**2*MZ**4*reglog(MZ) - 3*MZ**6*reglog(MZ) - 24*cw**2*MZ**6*reglog(MZ) - (36*MW**4*MZ**2*sw**4*reglog(MZ))/cw**2 + 186*MW**6*reglog(cmath.pi) - 264*cw**2*MW**6*reglog(cmath.pi) - 36*cw**2*MW**4*MZ**2*reglog(cmath.pi) - 18*MT**2*MW**4*Ncol*reglog(cmath.pi) + 36*MW**6*Ncol*reglog(cmath.pi) - 228*MW**6*sw**2*reglog(cmath.pi) + (36*MW**6*sw**4*reglog(cmath.pi))/cw**2 + 372*MW**6*reglog(MU_R) - 528*cw**2*MW**6*reglog(MU_R) - 72*cw**2*MW**4*MZ**2*reglog(MU_R) - 36*MT**2*MW**4*Ncol*reglog(MU_R) + 72*MW**6*Ncol*reglog(MU_R) - 456*MW**6*sw**2*reglog(MU_R) + (72*MW**6*sw**4*reglog(MU_R))/cw**2)))/(1152.*MW**6*cmath.pi**2*sw**2)))/(2.*sw)'},
                           texname = '\delta SW')


CWCoup_UV_EW = CTParameter(name = 'CWCoup_UV_EW',
                           type = 'complex',
                           value = {-1:'(ee**2*(-18*(2*cw**6*MZ**4 + cw**4*MT**2*MZ**2*Ncol) + 36*MW**4*(-1 + 2*cw**6 - 2*cw**2*sw**4) + cw**2*MW**2*(18*MT**2*Ncol - MZ**2*(39 + 147*cw**4 - 72*sw**2 + 111*sw**4 - 6*cw**2*(31 + 6*Ncol - 37*sw**2) + 4*Ncol*(9 - 18*sw**2 + 20*sw**4)))))/(1152.*cw**3*MW**2*MZ**2*cmath.pi**2*sw**2)',
                                     0:'-(ee**2*(-18*(2*cw**6*MZ**4 + cw**4*MT**2*MZ**2*Ncol) + 36*MW**4*(-1 + 2*cw**6 - 2*cw**2*sw**4) + cw**2*MW**2*(18*MT**2*Ncol - MZ**2*(39 + 147*cw**4 - 72*sw**2 + 111*sw**4 - 6*cw**2*(31 + 6*Ncol - 37*sw**2) + 4*Ncol*(9 - 18*sw**2 + 20*sw**4))))*reglog(4*cmath.pi))/(1152.*cw**3*MW**2*MZ**2*cmath.pi**2*sw**2) + (cw*(-(ee**2*((-4*cw**2*cmath.sqrt(4*MT**2 - MZ**2)*Ncol*(MZ**2*(9 - 24*sw**2 + 32*sw**4) + MT**2*(-9 - 48*sw**2 + 64*sw**4))*arg(2*MT**2 - MZ**2 + MZ*cmath.sqrt(4*MT**2 - MZ**2)*complex(0,1)))/MZ + (18*cw**2*cmath.sqrt(4*MW**2 - MZ**2)*(cw**4*(60*MW**2 + 39*MZ**2) + 2*cw**2*(-4*MW**2 + MZ**2)*sw**2 - (20*MW**2 + MZ**2)*sw**4)*arg(2*MW**2 - MZ**2 + MZ*cmath.sqrt(4*MW**2 - MZ**2)*complex(0,1)))/MZ - (9*MH*cmath.sqrt(-MH**2 + 4*MZ**2)*(12*MW**2*MZ**2 + cw**2*(MH**4 - 4*MH**2*MZ**2))*arg(-MH + cmath.sqrt(-MH**2 + 4*MZ**2)*complex(0,1)))/MZ**4 + (9*MH*cmath.sqrt(-MH**2 + 4*MZ**2)*(12*MW**2*MZ**2 + cw**2*(MH**4 - 4*MH**2*MZ**2))*arg(MH + cmath.sqrt(-MH**2 + 4*MZ**2)*complex(0,1)))/MZ**4 - (9*MH*cmath.sqrt(-MH**2 + 4*MZ**2)*(12*MW**2*MZ**2 + cw**2*(MH**4 - 4*MH**2*MZ**2))*arg(MH**2 - 2*MZ**2 + MH*cmath.sqrt(-MH**2 + 4*MZ**2)*complex(0,1)))/MZ**4 + (9*MH*cmath.sqrt(-MH**2 + 4*MZ**2)*(12*MW**2*MZ**2 + cw**2*(MH**4 - 4*MH**2*MZ**2))*arg(-MH**2 + 2*MZ**2 + MH*cmath.sqrt(-MH**2 + 4*MZ**2)*complex(0,1)))/MZ**4 + (36*cw**2*MH**2*(MH**2 - 3*MZ**2)*reglog(MH))/MZ**2 + 8*cw**2*Ncol*(27*MT**2 + MZ**2*(-9 + 24*sw**2 - 32*sw**4))*reglog(MT) + 36*cw**2*(3*cw**4*(8*MW**2 + 13*MZ**2) + 2*cw**2*MZ**2*sw**2 - (24*MW**2 + MZ**2)*sw**4)*reglog(MW) + (4*(108*MW**2*MZ**2 + cw**2*(9*MH**4 - 45*MH**2*MZ**2 - MZ**4*(9*(13 - 24*sw**2 + 48*sw**4) + 2*Ncol*(45 - 84*sw**2 + 88*sw**4))))*reglog(MZ))/MZ**2 - (9*MH**2*(12*MW**2*MZ**2 + cw**2*(MH**4 - 4*MH**2*MZ**2))*reglog(4*MH**2*MZ**2))/MZ**4 + (9*(MH**2 - 2*MZ**2)*(12*MW**2*MZ**2 + cw**2*(MH**4 - 4*MH**2*MZ**2))*reglog(4*MZ**4))/MZ**4 + (2*(-108*MW**2*MZ**2*(-2 + reglog(1/(16.*cmath.pi))) + 9*cw**6*MZ**2*(24*MW**2*(-5 + reglog(1/(4.*cmath.pi))) + MZ**2*(-80 - 78*reglog(2) - 39*reglog(cmath.pi))) + 6*cw**4*MZ**2*sw**2*(24*MW**2 + MZ**2*(-8 - 6*reglog(2) - 3*reglog(cmath.pi))) + cw**2*(9*MH**4*(1 + reglog(4)) - 18*MH**2*MZ**2*(3 + reglog(16)) + MZ**2*(2*(-36*MW**2*sw**4*(-5 - 6*reglog(2) - 3*reglog(cmath.pi)) + MT**2*Ncol*(-96*sw**2 + 128*sw**4 - 9*(2 + reglog(64) + 3*reglog(cmath.pi)))) + MZ**2*(4*Ncol*(9 - 18*sw**2 + 20*sw**4)*(5 + reglog(64) + 3*reglog(cmath.pi)) + 3*(59 + 78*reglog(2) + 39*reglog(cmath.pi) - 24*sw**2*(5 + reglog(64) + 3*reglog(cmath.pi)) + sw**4*(248 + 294*reglog(2) + 147*reglog(cmath.pi))))))))/MZ**2 - 12*(36*MW**2*(-1 + 2*cw**6 - 2*cw**2*sw**4) + cw**2*(18*MT**2*Ncol + MZ**2*(-39 + 117*cw**4 + 72*sw**2 + 6*cw**2*sw**2 - 147*sw**4 - 4*Ncol*(9 - 18*sw**2 + 20*sw**4))))*reglog(MU_R)))/(3456.*cw**4*MZ**2*cmath.pi**2*sw**2) + (ee**2*(-3*MH*cmath.sqrt(-MH**2 + 4*MW**2)*(MH**4 - 4*MH**2*MW**2 + 12*MW**4)*arg(-MH + cmath.sqrt(-MH**2 + 4*MW**2)*complex(0,1)) + 3*MH*cmath.sqrt(-MH**2 + 4*MW**2)*(MH**4 - 4*MH**2*MW**2 + 12*MW**4)*arg(MH + cmath.sqrt(-MH**2 + 4*MW**2)*complex(0,1)) - 3*MH*cmath.sqrt(-MH**2 + 4*MW**2)*(MH**4 - 4*MH**2*MW**2 + 12*MW**4)*arg(MH**2 - 2*MW**2 + MH*cmath.sqrt(-MH**2 + 4*MW**2)*complex(0,1)) + 3*MH*cmath.sqrt(-MH**2 + 4*MW**2)*(MH**4 - 4*MH**2*MW**2 + 12*MW**4)*arg(-MH**2 + 2*MW**2 + MH*cmath.sqrt(-MH**2 + 4*MW**2)*complex(0,1)) - (3*MZ*cmath.sqrt(4*MW**2 - MZ**2)*(cw**2*(-4*MW**2*MZ**2 + MZ**4) + cw**4*(-60*MW**4 - 44*MW**2*MZ**2 + 8*MZ**4) + 12*MW**4*sw**4)*arg(-MZ + cmath.sqrt(4*MW**2 - MZ**2)*complex(0,1)))/cw**2 + (3*MZ*cmath.sqrt(4*MW**2 - MZ**2)*(cw**2*(-4*MW**2*MZ**2 + MZ**4) + cw**4*(-60*MW**4 - 44*MW**2*MZ**2 + 8*MZ**4) + 12*MW**4*sw**4)*arg(MZ + cmath.sqrt(4*MW**2 - MZ**2)*complex(0,1)))/cw**2 + (3*MZ*cmath.sqrt(4*MW**2 - MZ**2)*(cw**2*(-4*MW**2*MZ**2 + MZ**4) + cw**4*(-60*MW**4 - 44*MW**2*MZ**2 + 8*MZ**4) + 12*MW**4*sw**4)*arg(2*MW**2 - MZ**2 + MZ*cmath.sqrt(4*MW**2 - MZ**2)*complex(0,1)))/cw**2 - (3*MZ*cmath.sqrt(4*MW**2 - MZ**2)*(cw**2*(-4*MW**2*MZ**2 + MZ**4) + cw**4*(-60*MW**4 - 44*MW**2*MZ**2 + 8*MZ**4) + 12*MW**4*sw**4)*arg(-2*MW**2 + MZ**2 + MZ*cmath.sqrt(4*MW**2 - MZ**2)*complex(0,1)))/cw**2 + 2*(3*MH**4*MW**2 - 18*MH**2*MW**4 + 166*MW**6 - 428*cw**2*MW**6 - 18*MW**4*MZ**2 - 216*cw**2*MW**4*MZ**2 + 3*MW**2*MZ**4 + 24*cw**2*MW**2*MZ**4 - 6*MT**4*MW**2*Ncol - 12*MT**2*MW**4*Ncol + 60*MW**6*Ncol - 356*MW**6*sw**2 + (72*MW**6*sw**4)/cw**2 + 372*MW**6*reglog(2) - 528*cw**2*MW**6*reglog(2) - 72*cw**2*MW**4*MZ**2*reglog(2) - 36*MT**2*MW**4*Ncol*reglog(2) + 72*MW**6*Ncol*reglog(2) - 456*MW**6*sw**2*reglog(2) + (72*MW**6*sw**4*reglog(2))/cw**2 - 3*(MH**6 - 6*MH**4*MW**2 + 18*MH**2*MW**4)*reglog(MH) + 12*MT**6*Ncol*reglog(MT) - 6*MT**6*Ncol*reglog(MT - MW) + 18*MT**2*MW**4*Ncol*reglog(MT - MW) - 12*MW**6*Ncol*reglog(MT - MW) + 3*MH**6*reglog(MW) - 18*MH**4*MW**2*reglog(MW) + 54*MH**2*MW**4*reglog(MW) - 372*MW**6*reglog(MW) + 528*cw**2*MW**6*reglog(MW) + 18*MW**4*MZ**2*reglog(MW) + 36*cw**2*MW**4*MZ**2*reglog(MW) - 18*MW**2*MZ**4*reglog(MW) - 180*cw**2*MW**2*MZ**4*reglog(MW) + 3*MZ**6*reglog(MW) + 24*cw**2*MZ**6*reglog(MW) - 48*MW**6*Ncol*reglog(MW) + 456*MW**6*sw**2*reglog(MW) - (72*MW**6*sw**4*reglog(MW))/cw**2 + (36*MW**4*MZ**2*sw**4*reglog(MW))/cw**2 - 6*MT**6*Ncol*reglog(MT + MW) + 18*MT**2*MW**4*Ncol*reglog(MT + MW) - 12*MW**6*Ncol*reglog(MT + MW) - 18*MW**4*MZ**2*reglog(MZ) + 36*cw**2*MW**4*MZ**2*reglog(MZ) + 18*MW**2*MZ**4*reglog(MZ) + 180*cw**2*MW**2*MZ**4*reglog(MZ) - 3*MZ**6*reglog(MZ) - 24*cw**2*MZ**6*reglog(MZ) - (36*MW**4*MZ**2*sw**4*reglog(MZ))/cw**2 + 186*MW**6*reglog(cmath.pi) - 264*cw**2*MW**6*reglog(cmath.pi) - 36*cw**2*MW**4*MZ**2*reglog(cmath.pi) - 18*MT**2*MW**4*Ncol*reglog(cmath.pi) + 36*MW**6*Ncol*reglog(cmath.pi) - 228*MW**6*sw**2*reglog(cmath.pi) + (36*MW**6*sw**4*reglog(cmath.pi))/cw**2 + 372*MW**6*reglog(MU_R) - 528*cw**2*MW**6*reglog(MU_R) - 72*cw**2*MW**4*MZ**2*reglog(MU_R) - 36*MT**2*MW**4*Ncol*reglog(MU_R) + 72*MW**6*Ncol*reglog(MU_R) - 456*MW**6*sw**2*reglog(MU_R) + (72*MW**6*sw**4*reglog(MU_R))/cw**2)))/(1152.*MW**6*cmath.pi**2*sw**2)))/2.'},
                           texname = '\delta CW')

# ============== #
# Mixed QCD-QED  #
# ============== #

UV_yuk_c = CTParameter(name = 'UV_yuk_c',
                       type = 'real',
                       value = {-1:'-(1.0/2.0)*((G**2)/(16.0*cmath.pi**2))*3.0*CF*2.0',
                       0:'cond(MC,0.0,-(1.0/2.0)*((G**2)/(16.0*cmath.pi**2))*CF*(-3.0*reglog(MC**2/MU_R**2)+4.0)*2.0)'
                       },
                       texname = '\delta y_c')

UV_yuk_b = CTParameter(name = 'UV_yuk_b',
                       type = 'real',
                       value = {-1:'-(1.0/2.0)*((G**2)/(16.0*cmath.pi**2))*3.0*CF*2.0',
                       0:'cond(MB,0.0,-(1.0/2.0)*((G**2)/(16.0*cmath.pi**2))*CF*(-3.0*reglog(MB**2/MU_R**2)+4.0)*2.0)'
                       },
                       texname = '\delta y_b')

UV_yuk_t = CTParameter(name = 'UV_yuk_t',
                       type = 'real',
                       value = {-1:'-(1.0/2.0)*((G**2)/(16.0*cmath.pi**2))*3.0*CF*2.0',
                       0:'cond(MT,0.0,-(1.0/2.0)*((G**2)/(16.0*cmath.pi**2))*CF*(-3.0*reglog(MT**2/MU_R**2)+4.0)*2.0)'
                       },
                       texname = '\delta y_t')

